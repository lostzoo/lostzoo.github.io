[{"title":"AOV网与拓扑排序","url":"/2023/12/20/AOV%E7%BD%91%E4%B8%8E%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/","content":"<h1 id=\"AOV网与拓扑排序\"><a href=\"#AOV网与拓扑排序\" class=\"headerlink\" title=\"AOV网与拓扑排序\"></a>AOV网与拓扑排序</h1><p>#数据结构/进阶/图/AOV网</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"AOE网与关键路径","url":"/2023/12/20/AOE%E7%BD%91%E4%B8%8E%E5%85%B3%E9%94%AE%E8%B7%AF%E5%BE%84/","content":"<h1 id=\"AOE网与关键路径\"><a href=\"#AOE网与关键路径\" class=\"headerlink\" title=\"AOE网与关键路径\"></a>AOE网与关键路径</h1><p>#数据结构/进阶/图/AOE网</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"B-树与B+树","url":"/2023/12/20/B-%E6%A0%91%E4%B8%8EB+%E6%A0%91/","content":"<h1 id=\"B-树与B-树\"><a href=\"#B-树与B-树\" class=\"headerlink\" title=\"B-树与B+树\"></a>B-树与B+树</h1><p>#数据结构/高级/文件与查找/B+与B-树</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"二叉排序树","url":"/2023/12/20/%E4%BA%8C%E5%8F%89%E6%8E%92%E5%BA%8F%E6%A0%91/","content":"<h1 id=\"二叉排序树\"><a href=\"#二叉排序树\" class=\"headerlink\" title=\"二叉排序树\"></a>二叉排序树</h1><p>#数据结构/进阶/树与二叉树/二叉排序树</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"二叉树与树的遍历","url":"/2023/12/20/%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%8E%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86/","content":"<h1 id=\"二叉树与树的遍历\"><a href=\"#二叉树与树的遍历\" class=\"headerlink\" title=\"二叉树与树的遍历\"></a>二叉树与树的遍历</h1><p>#数据结构/进阶/树与二叉树/遍历</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"二叉树概念及其基本操作","url":"/2023/12/20/%E4%BA%8C%E5%8F%89%E6%A0%91%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%85%B6%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/","content":"<h1 id=\"二叉树概念及其基本操作\"><a href=\"#二叉树概念及其基本操作\" class=\"headerlink\" title=\"二叉树概念及其基本操作\"></a>二叉树概念及其基本操作</h1><p>#数据结构/进阶/树与二叉树/概念与操作</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"二叉树的存储结构","url":"/2023/12/20/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84/","content":"<h1 id=\"二叉树的存储结构\"><a href=\"#二叉树的存储结构\" class=\"headerlink\" title=\"二叉树的存储结构\"></a>二叉树的存储结构</h1><p>#数据结构/进阶/树与二叉树/存储结构</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"双向链表及其操作","url":"/2023/12/20/%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8%E5%8F%8A%E5%85%B6%E6%93%8D%E4%BD%9C/","content":"<h1 id=\"双向链表及其操作\"><a href=\"#双向链表及其操作\" class=\"headerlink\" title=\"双向链表及其操作\"></a>双向链表及其操作</h1><p>#数据结构/入门/线性表/双向链表</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"二路归并排序","url":"/2023/12/20/%E4%BA%8C%E8%B7%AF%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/","content":"<h1 id=\"二路归并排序\"><a href=\"#二路归并排序\" class=\"headerlink\" title=\"二路归并排序\"></a>二路归并排序</h1><p>#数据结构/高级/内排序/归并排序</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"各种内排序方法的比较","url":"/2023/12/20/%E5%90%84%E7%A7%8D%E5%86%85%E6%8E%92%E5%BA%8F%E6%96%B9%E6%B3%95%E7%9A%84%E6%AF%94%E8%BE%83/","content":"<h1 id=\"各种内排序方法的比较\"><a href=\"#各种内排序方法的比较\" class=\"headerlink\" title=\"各种内排序方法的比较\"></a>各种内排序方法的比较</h1><p>#数据结构/高级/内排序/排序比较</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"哈夫曼树及其应用","url":"/2023/12/20/%E5%93%88%E5%A4%AB%E6%9B%BC%E6%A0%91%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8/","content":"<h1 id=\"哈夫曼树及其应用\"><a href=\"#哈夫曼树及其应用\" class=\"headerlink\" title=\"哈夫曼树及其应用\"></a>哈夫曼树及其应用</h1><p>#数据结构/进阶/树与二叉树/哈夫曼树</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"图的基本概念","url":"/2023/12/20/%E5%9B%BE%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/","content":"<h1 id=\"图的基本概念\"><a href=\"#图的基本概念\" class=\"headerlink\" title=\"图的基本概念\"></a>图的基本概念</h1><p>#数据结构/进阶/图/基本概念</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"图的存储方式","url":"/2023/12/20/%E5%9B%BE%E7%9A%84%E5%AD%98%E5%82%A8%E6%96%B9%E5%BC%8F/","content":"<h1 id=\"图的存储方式\"><a href=\"#图的存储方式\" class=\"headerlink\" title=\"图的存储方式\"></a>图的存储方式</h1><p>#数据结构/进阶/图/存储结构</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"图的遍历","url":"/2023/12/20/%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/","content":"<h1 id=\"图的遍历\"><a href=\"#图的遍历\" class=\"headerlink\" title=\"图的遍历\"></a>图的遍历</h1><p>#数据结构/进阶/图/遍历</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"堆栈的应用举例","url":"/2023/12/20/%E5%A0%86%E6%A0%88%E7%9A%84%E5%BA%94%E7%94%A8%E4%B8%BE%E4%BE%8B/","content":"<h1 id=\"堆栈的应用举例\"><a href=\"#堆栈的应用举例\" class=\"headerlink\" title=\"堆栈的应用举例\"></a>堆栈的应用举例</h1><p>#数据结构/入门/堆栈与队列/堆栈/应用举例</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"堆栈的概念及其基本操作","url":"/2023/12/20/%E5%A0%86%E6%A0%88%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%85%B6%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/","content":"<h1 id=\"堆栈的概念及其基本操作\"><a href=\"#堆栈的概念及其基本操作\" class=\"headerlink\" title=\"堆栈的概念及其基本操作\"></a>堆栈的概念及其基本操作</h1><p>#数据结构/入门/堆栈与队列/堆栈/概念与操作</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"堆栈的链式存储结构","url":"/2023/12/20/%E5%A0%86%E6%A0%88%E7%9A%84%E9%93%BE%E5%BC%8F%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84/","content":"<h1 id=\"堆栈的链式存储结构\"><a href=\"#堆栈的链式存储结构\" class=\"headerlink\" title=\"堆栈的链式存储结构\"></a>堆栈的链式存储结构</h1><p>#数据结构/入门/堆栈与队列/堆栈/链式存储</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"堆栈的顺序存储结构","url":"/2023/12/20/%E5%A0%86%E6%A0%88%E7%9A%84%E9%A1%BA%E5%BA%8F%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84/","content":"<h1 id=\"堆栈的顺序存储结构\"><a href=\"#堆栈的顺序存储结构\" class=\"headerlink\" title=\"堆栈的顺序存储结构\"></a>堆栈的顺序存储结构</h1><p>#数据结构/入门/堆栈与队列/堆栈/顺序存储</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"堆积排序","url":"/2023/12/20/%E5%A0%86%E7%A7%AF%E6%8E%92%E5%BA%8F/","content":"<h1 id=\"堆积排序\"><a href=\"#堆积排序\" class=\"headerlink\" title=\"堆积排序\"></a>堆积排序</h1><p>#数据结构/高级/内排序/堆积排序</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"常用软件清单","url":"/2023/12/20/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E6%B8%85%E5%8D%95/","content":"<h1 id=\"常用软件清单\"><a href=\"#常用软件清单\" class=\"headerlink\" title=\"常用软件清单\"></a>常用软件清单</h1><pre><code>- 软件\n    - iterm2\n    - 有道词典\n    - 微信\n    - 迅雷\n    - 喜马拉雅\n    - WPS\n    - VS Code\n    - 柠檬\n    - SwitchHosts\n    - sourceTree \n    - RunCat\n    - Postman\n    - LyricsX\n    - IINA\n    - Google Chrome\n    - Flycut\n    - CleanMyMacX\n    - 百度云盘\n    - Amethyst\n    - Anaconda\n    - musikcube\n    - musikcube \n    - VMS\n    - vim_runtime\n- 配置\n    alias iina=&quot;/Applications/IINA.app/Contents/MacOS/IINA&quot;\n    alias chrome=&quot;/Applications/&apos;Google Chrome.app&apos;/Contents/MacOS/&apos;Google Chrome&apos;&quot;\n    alias spicetify=&quot;~/spicetify-cli/spicetify&quot;\n    alias musikcube=&quot;~/WorkSpace/musikcube/bin/musikcube&quot;\n\nbrew env\n199.232.68.133 raw.githubusercontent.com\n199.232.68.133 user-images.githubusercontent.com\n199.232.68.133 avatars2.githubusercontent.com\n199.232.68.133 avatars1.githubusercontent.com \n- 资料</code></pre>\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"循环链表及其操作","url":"/2023/12/20/%E5%BE%AA%E7%8E%AF%E9%93%BE%E8%A1%A8%E5%8F%8A%E5%85%B6%E6%93%8D%E4%BD%9C/","content":"<h1 id=\"循环链表及其操作\"><a href=\"#循环链表及其操作\" class=\"headerlink\" title=\"循环链表及其操作\"></a>循环链表及其操作</h1><p>#数据结构/入门/线性表/循环链表</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"快速排序","url":"/2023/12/20/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/","content":"<h1 id=\"快速排序\"><a href=\"#快速排序\" class=\"headerlink\" title=\"快速排序\"></a>快速排序</h1><p>#数据结构/高级/内排序/快速排序</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">排序算法</span><br><span class=\"line\">这个算法具体实现方式如下</span><br></pre></td></tr></table></figure>\n\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"插入排序","url":"/2023/12/20/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/","content":"<h1 id=\"插入排序\"><a href=\"#插入排序\" class=\"headerlink\" title=\"插入排序\"></a>插入排序</h1><p>#数据结构/高级/内排序/插入排序</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"散列文件","url":"/2023/12/20/%E6%95%A3%E5%88%97%E6%96%87%E4%BB%B6/","content":"<h1 id=\"散列文件\"><a href=\"#散列文件\" class=\"headerlink\" title=\"散列文件\"></a>散列文件</h1><p>#数据结构/高级/文件与查找/散列文件</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"数组的基本应用","url":"/2023/12/20/%E6%95%B0%E7%BB%84%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%BA%94%E7%94%A8/","content":"<h1 id=\"数组的基本应用\"><a href=\"#数组的基本应用\" class=\"headerlink\" title=\"数组的基本应用\"></a>数组的基本应用</h1><p>#数据结构/入门/数组/基本应用</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"数组的存储结构","url":"/2023/12/20/%E6%95%B0%E7%BB%84%E7%9A%84%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84/","content":"<h1 id=\"数组的存储结构\"><a href=\"#数组的存储结构\" class=\"headerlink\" title=\"数组的存储结构\"></a>数组的存储结构</h1><p>#数据结构/入门/数组/顺序结构</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"数组的概念","url":"/2023/12/20/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5/","content":"<h1 id=\"数组的概念\"><a href=\"#数组的概念\" class=\"headerlink\" title=\"数组的概念\"></a>数组的概念</h1><p>#数据结构/入门/数组/概念</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"文件概述","url":"/2023/12/20/%E6%96%87%E4%BB%B6%E6%A6%82%E8%BF%B0/","content":"<h1 id=\"文件概述\"><a href=\"#文件概述\" class=\"headerlink\" title=\"文件概述\"></a>文件概述</h1><p>#数据结构/高级/文件与查找/概述</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"方法与技巧","url":"/2023/12/20/%E6%96%B9%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/","content":"<h1 id=\"方法与技巧\"><a href=\"#方法与技巧\" class=\"headerlink\" title=\"方法与技巧\"></a>方法与技巧</h1><h1 id=\"方法与技巧-1\"><a href=\"#方法与技巧-1\" class=\"headerlink\" title=\"方法与技巧\"></a>方法与技巧</h1><p>我们为熊掌记开发了许多实用功能，帮助你将想法尽快变成文字。继续阅读了解实用技巧。</p>\n<p>如果你想从头开始学习，你可以查看[欢迎使用熊掌记]、[管理与发布]以及[Bear Pro = 同步+加密+多种导出格式+更多主题+未来更多…]。</p>\n<h2 id=\"高级搜索-🔎\"><a href=\"#高级搜索-🔎\" class=\"headerlink\" title=\"高级搜索 🔎\"></a>高级搜索 🔎</h2><p>熊掌记可以在你的所有笔记中快速搜索。熊掌记同时提供许多<span class=\"exturl\" data-url=\"aHR0cDovL2JlYXIuYXBwL2ZhcS9BZHZhbmNlZCUyMHNlYXJjaCUyMG9wdGlvbnMlMjBpbiUyMEJlYXIv\">高级搜索参数<i class=\"fa fa-external-link-alt\"></i></span>，允许你只搜索特定类型的笔记内容。</p>\n<p>例如，在搜索框中输入<code>@待办</code>可找到所有带任务的笔记，搜索<code>@文件</code>则可查看所有带附件的笔记。你还可以使用<code>@图片</code><em>仅</em>搜索带有图像附件的笔记。最后，你还可以使用双引号来精确搜索词语，例如：<code>“阿熊最酷”</code>。</p>\n<h2 id=\"浏览器和应用程序扩展-🧩\"><a href=\"#浏览器和应用程序扩展-🧩\" class=\"headerlink\" title=\"浏览器和应用程序扩展 🧩\"></a>浏览器和应用程序扩展 🧩</h2><p>从其他应用程序收集文本、图像、附件和网页内容十分容易。了解如何为 <span class=\"exturl\" data-url=\"aHR0cDovL2JlYXIuYXBwL2NuL2ZhcS9FeHRlbnNpb25zL2lPUyUyMEFwcCUyMEV4dGVuc2lvbi8=\">iPad 与 iPhone<i class=\"fa fa-external-link-alt\"></i></span> 以及 <span class=\"exturl\" data-url=\"aHR0cDovL2JlYXIuYXBwL2NuL2ZhcS9FeHRlbnNpb25zL0Jyb3dzZXIlMjBleHRlbnNpb25zLw==\">Mac<i class=\"fa fa-external-link-alt\"></i></span> 添加熊掌记扩展及其使用方法。</p>\n<h2 id=\"点击标签-🏷\"><a href=\"#点击标签-🏷\" class=\"headerlink\" title=\"点击标签 🏷\"></a>点击标签 🏷</h2><p>熊掌记中所有的标签都可长按。要使用此功能，请确保没有进入编辑模式，通过键盘使用 Command + Return ，或在 iOS 滑动来隐藏键盘。</p>\n<p>然后，在任何笔记中，点击像 #欢迎 这样的标签，笔记列表就会出现，并显示所有包含该标签的笔记。</p>\n<p>在 Mac 上，你可以隐藏侧边栏和/或笔记列表，享受无干扰的写作环境（iOS 上自动提供这种环境 😉）。使用布局选择器（右下角图标）查看可用选项。</p>\n<h2 id=\"将笔记链接起来-⛓\"><a href=\"#将笔记链接起来-⛓\" class=\"headerlink\" title=\"将笔记链接起来 ⛓\"></a>将笔记链接起来 ⛓</h2><p>你可以在熊掌记中将多篇笔记链接在一起。你可通过链接在同一项目的多篇笔记之间快速跳转，随心管理，或者像我们一样用多篇笔记欢迎熊掌记的新用户。😉</p>\n<p>链接一篇笔记到另一篇：</p>\n<ul>\n<li>在笔记中的任何位置，键入两个左方括号，就像这样：<strong>[</strong></li>\n<li>输入要链接的文字内容</li>\n<li>输入时会出现提示框为您建议内容</li>\n<li>选择一篇为您建议的笔记，熊掌记即会自动插入笔记名称，生成链接，并在结尾补上方括号。</li>\n</ul>\n<p><strong>提示</strong>：如果你使用的是 Mac 或 iPad 的键盘，则可以使用方向键和 Return 键来选择建议的笔记。</p>\n<h2 id=\"我们的社区-👥\"><a href=\"#我们的社区-👥\" class=\"headerlink\" title=\"我们的社区 👥\"></a>我们的社区 👥</h2><p>熊掌记的用户在我们热闹的社区中分享观点、技巧、工作方法，还能找到为熊掌记设计的实用小工具。开始探索并了解熊掌记的更多内容，请访问：</p>\n<ul>\n<li><a href=\"www.weibo.com/xiongzhangji\">官方微博</a></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iZWFyLmFwcC9jbi8jY29tbXVuaXR5\">官方微信<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmJlYXIuYXBw\">熊掌记与写作<i class=\"fa fa-external-link-alt\"></i></span> - 我们的英文博客</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZWRkaXQuY29tL3IvQmVhckFwcA==\">Reddit/r/BearApp<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9CZWFyTm90ZXNBcHA=\">Twitter<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL0JlYXJOb3Rlcy8=\">Facebook<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NidXNzby9CZWFyLVBvd2VyLVBhY2svYmxvYi9tYXN0ZXIvUkVBRE1FLm1k\">Bear Power Pack<i class=\"fa fa-external-link-alt\"></i></span> - 支持熊掌记的第三方工具集合</li>\n</ul>\n<h2 id=\"反馈-💬\"><a href=\"#反馈-💬\" class=\"headerlink\" title=\"反馈 💬\"></a>反馈 💬</h2><p>我们<strong>希望</strong>了解您的心声，请将您的建议和反馈发送到<span class=\"exturl\" data-url=\"bWFpbHRvOmJlYXJAc2hpbnlmcm9nLm5ldA==\">bear@shinyfrog.net<i class=\"fa fa-external-link-alt\"></i></span>。</p>\n<p>如果你喜欢熊掌记，请为我们在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcHBzLmFwcGxlLmNvbS9jbi9hcHAvJUU3JTg2JThBJUU2JThFJThDJUU4JUFFJUIwL2lkMTAxNjM2NjQ0Nw==\">App Store<i class=\"fa fa-external-link-alt\"></i></span> 和 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcHBzLmFwcGxlLmNvbS9jbi9hcHAvJUU3JTg2JThBJUU2JThFJThDJUU4JUFFJUIwL2lkMTA5MTE4OTEyMj9tdD0xMg==\">Mac App Store<i class=\"fa fa-external-link-alt\"></i></span> 中评分及评论。这会帮助我们做得更好！</p>\n<p>感谢使用熊掌记，祝你写作愉快！<br>🎉 🐻 🎉</p>\n<h3 id=\"了解更多\"><a href=\"#了解更多\" class=\"headerlink\" title=\"了解更多\"></a>了解更多</h3><p>[欢迎使用熊掌记]<br>[管理与发布]<br>[Bear Pro = 同步+加密+多种导出格式+更多主题+未来更多…]</p>\n<p>#欢迎/方法与技巧 #欢迎/管理</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"最短路径","url":"/2023/12/20/%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84/","content":"<h1 id=\"最短路径\"><a href=\"#最短路径\" class=\"headerlink\" title=\"最短路径\"></a>最短路径</h1><p>#数据结构/进阶/图/最短路径</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"树的基本概念","url":"/2023/12/20/%E6%A0%91%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/","content":"<h1 id=\"树的基本概念\"><a href=\"#树的基本概念\" class=\"headerlink\" title=\"树的基本概念\"></a>树的基本概念</h1><p>#数据结构/进阶/树与二叉树/基本概念</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"泡排序","url":"/2023/12/20/%E6%B3%A1%E6%8E%92%E5%BA%8F/","content":"<h1 id=\"泡排序\"><a href=\"#泡排序\" class=\"headerlink\" title=\"泡排序\"></a>泡排序</h1><p>#数据结构/高级/内排序/泡排序</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"最小生成树","url":"/2023/12/20/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/","content":"<h1 id=\"最小生成树\"><a href=\"#最小生成树\" class=\"headerlink\" title=\"最小生成树\"></a>最小生成树</h1><p>#数据结构/进阶/图/最小生成树</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"概述","url":"/2023/12/20/%E6%A6%82%E8%BF%B0/","content":"<h1 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h1><p>#数据结构/高级/内排序/概述</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"矩阵的压缩存储","url":"/2023/12/20/%E7%9F%A9%E9%98%B5%E7%9A%84%E5%8E%8B%E7%BC%A9%E5%AD%98%E5%82%A8/","content":"<h1 id=\"矩阵的压缩存储\"><a href=\"#矩阵的压缩存储\" class=\"headerlink\" title=\"矩阵的压缩存储\"></a>矩阵的压缩存储</h1><p>#数据结构/入门/数组/矩阵压缩</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"稀疏矩阵的三元组表表示","url":"/2023/12/20/%E7%A8%80%E7%96%8F%E7%9F%A9%E9%98%B5%E7%9A%84%E4%B8%89%E5%85%83%E7%BB%84%E8%A1%A8%E8%A1%A8%E7%A4%BA/","content":"<h1 id=\"稀疏矩阵的三元组表表示\"><a href=\"#稀疏矩阵的三元组表表示\" class=\"headerlink\" title=\"稀疏矩阵的三元组表表示\"></a>稀疏矩阵的三元组表表示</h1><p>#数据结构/入门/数组/稀疏矩阵</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"索引文件","url":"/2023/12/20/%E7%B4%A2%E5%BC%95%E6%96%87%E4%BB%B6/","content":"<h1 id=\"索引文件\"><a href=\"#索引文件\" class=\"headerlink\" title=\"索引文件\"></a>索引文件</h1><p>#数据结构/高级/文件与查找/索引文件</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"线性表的定义及其基本操作","url":"/2023/12/20/%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E5%AE%9A%E4%B9%89%E5%8F%8A%E5%85%B6%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/","content":"<h1 id=\"线性表的定义及其基本操作\"><a href=\"#线性表的定义及其基本操作\" class=\"headerlink\" title=\"线性表的定义及其基本操作\"></a>线性表的定义及其基本操作</h1><p>#数据结构/入门/线性表/定义与操作</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"线性表的顺序存储结构","url":"/2023/12/20/%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E9%A1%BA%E5%BA%8F%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84/","content":"<h1 id=\"线性表的顺序存储结构\"><a href=\"#线性表的顺序存储结构\" class=\"headerlink\" title=\"线性表的顺序存储结构\"></a>线性表的顺序存储结构</h1><p>#数据结构/入门/线性表/顺序存储</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"线索二叉树","url":"/2023/12/20/%E7%BA%BF%E7%B4%A2%E4%BA%8C%E5%8F%89%E6%A0%91/","content":"<h1 id=\"线索二叉树\"><a href=\"#线索二叉树\" class=\"headerlink\" title=\"线索二叉树\"></a>线索二叉树</h1><p>#数据结构/进阶/树与二叉树/线索二叉树</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"线性链表及其操作","url":"/2023/12/20/%E7%BA%BF%E6%80%A7%E9%93%BE%E8%A1%A8%E5%8F%8A%E5%85%B6%E6%93%8D%E4%BD%9C/","content":"<h1 id=\"线性链表及其操作\"><a href=\"#线性链表及其操作\" class=\"headerlink\" title=\"线性链表及其操作\"></a>线性链表及其操作</h1><p>#数据结构/入门/线性表/线性链表</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"谢尔排序","url":"/2023/12/20/%E8%B0%A2%E5%B0%94%E6%8E%92%E5%BA%8F/","content":"<h1 id=\"谢尔排序\"><a href=\"#谢尔排序\" class=\"headerlink\" title=\"谢尔排序\"></a>谢尔排序</h1><p>#数据结构/高级/内排序/谢尔排序</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"队列的概念及其操作","url":"/2023/12/20/%E9%98%9F%E5%88%97%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%85%B6%E6%93%8D%E4%BD%9C/","content":"<h1 id=\"队列的概念及其操作\"><a href=\"#队列的概念及其操作\" class=\"headerlink\" title=\"队列的概念及其操作\"></a>队列的概念及其操作</h1><p>#数据结构/入门/堆栈与队列/队列/概念与操作</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"选择排序","url":"/2023/12/20/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/","content":"<h1 id=\"选择排序\"><a href=\"#选择排序\" class=\"headerlink\" title=\"选择排序\"></a>选择排序</h1><p>#数据结构/高级/内排序/选择排序</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"队列的顺序存储结构","url":"/2023/12/20/%E9%98%9F%E5%88%97%E7%9A%84%E9%A1%BA%E5%BA%8F%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84/","content":"<h1 id=\"队列的顺序存储结构\"><a href=\"#队列的顺序存储结构\" class=\"headerlink\" title=\"队列的顺序存储结构\"></a>队列的顺序存储结构</h1><p>#数据结构/入门/堆栈与队列/队列/顺序存储</p>\n<img title=\"\" data-src=\"file:///Users/dongdong/Library/Application Support/marktext/images/c16bfe1750fcc4b950a8da5337a9f38a8b7e463f.jpeg\" alt=\"\">\n\n<p>这个是一种不一样的感觉！！</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"队列的链式存储结构","url":"/2023/12/20/%E9%98%9F%E5%88%97%E7%9A%84%E9%93%BE%E5%BC%8F%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84/","content":"<h1 id=\"队列的链式存储结构\"><a href=\"#队列的链式存储结构\" class=\"headerlink\" title=\"队列的链式存储结构\"></a>队列的链式存储结构</h1><p>#数据结构/入门/堆栈与队列/队列/链式存储</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"顺序文件","url":"/2023/12/20/%E9%A1%BA%E5%BA%8F%E6%96%87%E4%BB%B6/","content":"<h1 id=\"顺序文件\"><a href=\"#顺序文件\" class=\"headerlink\" title=\"顺序文件\"></a>顺序文件</h1><p>#数据结构/高级/文件与查找/顺序文件</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"数据结构大纲","url":"/2023/12/20/%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E8%B7%AF%E7%BA%BF/","content":"<h1 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h1><h2 id=\"大数据技术路线\"><a href=\"#大数据技术路线\" class=\"headerlink\" title=\"大数据技术路线\"></a>大数据技术路线</h2><h3 id=\"开发环境\"><a href=\"#开发环境\" class=\"headerlink\" title=\"开发环境\"></a>开发环境</h3><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 1.<a href=\"/2023/12/20/Linux%E5%AE%9E%E6%88%98/\" title=\"Linux实战\">Linux实战</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 2.<a href=\"/2023/12/20/VSCode%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7/\" title=\"VSCode编程工具\">VSCode编程工具</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 3.<a href=\"/2023/12/20/Git/\" title=\"Linux实战\">Linux实战</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 4.<a href=\"/2023/12/20/Maven/\" title=\"Maven\">Maven</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 5.<a href=\"/2023/12/20/Shell%E7%BC%96%E7%A8%8B/\" title=\"Shell编程\">Shell编程</a><h3 id=\"Java基础\"><a href=\"#Java基础\" class=\"headerlink\" title=\"Java基础\"></a>Java基础</h3></li>\n<li><input disabled=\"\" type=\"checkbox\"> 1.<a href=\"/2023/12/20/Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/\" title=\"Java基础语法\">Java基础语法</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 2.<a href=\"/2023/12/20/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/\" title=\"Java面向对象\">Java面向对象</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 3.<a href=\"/2023/12/20/Java%E9%9B%86%E5%90%88%E5%9F%BA%E7%A1%80/\" title=\"Java集合基础\">Java集合基础</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 4.<a href=\"/2023/12/20/JavaIO%E6%B5%81/\" title=\"JavaIO流\">JavaIO流</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 5.<a href=\"/2023/12/20/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/\" title=\"Java多线程\">Java多线程</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 6.<a href=\"/2023/12/20/Java%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/\" title=\"Java网络编程\">Java网络编程</a><h3 id=\"Java进阶\"><a href=\"#Java进阶\" class=\"headerlink\" title=\"Java进阶\"></a>Java进阶</h3></li>\n<li><input disabled=\"\" type=\"checkbox\"> 1.<a href=\"/2023/12/20/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8&%E5%8F%8D%E5%B0%84/\" title=\"类加载器&amp;反射\">类加载器&amp;反射</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 2.<a href=\"/2023/12/20/Xml%E8%AF%AD%E8%A8%80/\" title=\"Xml语言\">Xml语言</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 3.<a href=\"/2023/12/20/Lambda&%E8%8C%83%E5%BC%8F%E7%BC%96%E7%A8%8B&%E6%9E%9A%E4%B8%BE/\" title=\"Lambda&amp;范式编程&amp;枚举\">Lambda&amp;范式编程&amp;枚举</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 4.<a href=\"/2023/12/20/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95&%E6%97%A5%E5%BF%97%E6%8A%80%E6%9C%AF/\" title=\"Linux实战\">Linux实战</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 5.<a href=\"/2023/12/20/JVM%E4%BC%98%E5%8C%96/\" title=\"JVM优化\">JVM优化</a><h3 id=\"数据库中间件\"><a href=\"#数据库中间件\" class=\"headerlink\" title=\"数据库中间件\"></a>数据库中间件</h3></li>\n<li><input disabled=\"\" type=\"checkbox\"> 1.<a href=\"/2023/12/20/MySQL/\" title=\"MySQL\">MySQL</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 2.<a href=\"/2023/12/20/Mybatis/\" title=\"Mybatis\">Mybatis</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 3.<a href=\"/2023/12/20/Redis%E7%BB%84%E4%BB%B6/\" title=\"Redis组件\">Redis组件</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 4.<a href=\"/2023/12/20/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8EElasticSearch/\" title=\"搜索引擎ElasticSearch\">搜索引擎ElasticSearch</a><h3 id=\"主流框架\"><a href=\"#主流框架\" class=\"headerlink\" title=\"主流框架\"></a>主流框架</h3></li>\n<li><input disabled=\"\" type=\"checkbox\"> 1.<a href=\"/2023/12/20/Spring/\" title=\"Linux实战\">Linux实战</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 2.<a href=\"/2023/12/20/SpringMVC/\" title=\"SpringMVC\">SpringMVC</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 3.<a href=\"/2023/12/20/SpringBoot%E5%BC%80%E5%8F%91/\" title=\"SpringBoot开发\">SpringBoot开发</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 4.<a href=\"/2023/12/20/%E5%BE%AE%E6%9C%8D%E5%8A%A1SpringCloud/\" title=\"微服务SpringCloud\">微服务SpringCloud</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 5.<a href=\"/2023/12/20/Dubbo/\" title=\"Dubbo\">Dubbo</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 6.<a href=\"/2023/12/20/Zookeeper%E7%BB%84%E4%BB%B6/\" title=\"Zookeeper组件\">Zookeeper组件</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 7.<a href=\"/2023/12/20/%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6RabbitMQ/\" title=\"消息中间件RabbitMQ\">消息中间件RabbitMQ</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 8.<a href=\"/2023/12/20/Nginx/\" title=\"Nginx\">Nginx</a><h3 id=\"大数据Hadoop离线分布式系统\"><a href=\"#大数据Hadoop离线分布式系统\" class=\"headerlink\" title=\"大数据Hadoop离线分布式系统\"></a>大数据Hadoop离线分布式系统</h3></li>\n<li><input disabled=\"\" type=\"checkbox\"> 1.<a href=\"/2023/12/20/%E5%A4%A7%E6%95%B0%E6%8D%AEHadoop%E7%94%9F%E6%80%81%E5%92%8C%E7%A1%AC%E4%BB%B6%E4%BB%8B%E7%BB%8D/\" title=\"大数据Hadoop生态和硬件介绍\">大数据Hadoop生态和硬件介绍</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 2.<a href=\"/2023/12/20/Zookeeper%E7%BB%84%E4%BB%B6/\" title=\"Zookeeper组件\">Zookeeper组件</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 3.<a href=\"/2023/12/20/HDFS%E7%BB%84%E4%BB%B6/\" title=\"Linux实战\">Linux实战</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 4.<a href=\"/2023/12/20/MapReduce%E7%BB%84%E4%BB%B6/\" title=\"MapReduce组件\">MapReduce组件</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 5.<a href=\"/2023/12/20/Yarn%E7%BB%84%E4%BB%B6/\" title=\"Yarn组件\">Yarn组件</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 6.<a href=\"/2023/12/20/Hive%E7%BB%84%E4%BB%B6/\" title=\"Hive组件\">Hive组件</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 7.<a href=\"/2023/12/20/Impala%E7%BB%84%E4%BB%B6/\" title=\"Impala组件\">Impala组件</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 8.<a href=\"/2023/12/20/%E8%BE%85%E5%8A%A9%E7%B3%BB%E7%BB%9F%E5%B7%A5%E5%85%B7/\" title=\"辅助系统工具\">辅助系统工具</a><h3 id=\"大数据NoSQL、Kafka和ELK技术实践\"><a href=\"#大数据NoSQL、Kafka和ELK技术实践\" class=\"headerlink\" title=\"大数据NoSQL、Kafka和ELK技术实践\"></a>大数据NoSQL、Kafka和ELK技术实践</h3></li>\n<li><input disabled=\"\" type=\"checkbox\"> 1.<a href=\"/2023/12/20/Redis%E7%BB%84%E4%BB%B6/\" title=\"Redis组件\">Redis组件</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 2.<a href=\"/2023/12/20/Hbase%E7%BB%84%E4%BB%B6/\" title=\"Hbase组件\">Hbase组件</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 3.<a href=\"/2023/12/20/Kafka%E7%BB%84%E4%BB%B6/\" title=\"Kafka组件\">Kafka组件</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 4.<a href=\"/2023/12/20/ELK%E6%8A%80%E6%9C%AF%E6%A0%88/\" title=\"ELK技术栈\">ELK技术栈</a><h3 id=\"大数据Spark内存计算系统\"><a href=\"#大数据Spark内存计算系统\" class=\"headerlink\" title=\"大数据Spark内存计算系统\"></a>大数据Spark内存计算系统</h3></li>\n<li><input disabled=\"\" type=\"checkbox\"> 1.<a href=\"/2023/12/20/Scala%E8%AF%AD%E8%A8%80/\" title=\"Scala语言\">Scala语言</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 2.<a href=\"/2023/12/20/Spark/\" title=\"Spark\">Spark</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 3.<a href=\"/2023/12/20/SparkSql/\" title=\"SparkSql\">SparkSql</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 4.<a href=\"/2023/12/20/SparkStream/\" title=\"SparkStream\">SparkStream</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 5.<a href=\"/2023/12/20/CDH%E6%90%AD%E5%BB%BA/\" title=\"CDH搭建\">CDH搭建</a><h3 id=\"大数据Flink实时计算系统\"><a href=\"#大数据Flink实时计算系统\" class=\"headerlink\" title=\"大数据Flink实时计算系统\"></a>大数据Flink实时计算系统</h3></li>\n<li><input disabled=\"\" type=\"checkbox\"> 1.<a href=\"/2023/12/20/Flink%E5%9F%BA%E7%A1%80/\" title=\"Flink基础\">Flink基础</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 2.<a href=\"/2023/12/20/Flink%E8%BF%9B%E9%98%B6/\" title=\"Flink进阶\">Flink进阶</a><h3 id=\"大数据新技术实战详解\"><a href=\"#大数据新技术实战详解\" class=\"headerlink\" title=\"大数据新技术实战详解\"></a>大数据新技术实战详解</h3></li>\n<li><input disabled=\"\" type=\"checkbox\"> 1.<a href=\"/2023/12/20/druid%E9%9B%86%E7%BE%A4/\" title=\"druid集群\">druid集群</a><h3 id=\"机器学习\"><a href=\"#机器学习\" class=\"headerlink\" title=\"机器学习\"></a>机器学习</h3></li>\n<li><input disabled=\"\" type=\"checkbox\"> 1.<a href=\"/2023/12/20/Python%E5%9F%BA%E7%A1%80/\" title=\"Python基础\">Python基础</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 2.<a href=\"/2023/12/20/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/\" title=\"Python数据分析\">Python数据分析</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 3.<a href=\"/2023/12/20/%E7%94%A8%E6%88%B7%E6%A0%87%E7%AD%BE%E9%A2%84%E6%B5%8B/\" title=\"用户标签预测\">用户标签预测</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 4.<a href=\"/2023/12/20/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/\" title=\"推荐系统\">推荐系统</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 5.<a href=\"/2023/12/20/CTR%E7%82%B9%E5%87%BB%E7%8E%87%E9%A2%84%E4%BC%B0/\" title=\"CTR点击率预估\">CTR点击率预估</a><h3 id=\"云计算\"><a href=\"#云计算\" class=\"headerlink\" title=\"云计算\"></a>云计算</h3></li>\n<li><input disabled=\"\" type=\"checkbox\"> 1.<a href=\"/2023/12/20/%E8%99%9A%E6%8B%9F%E5%8C%96/\" title=\"虚拟化\">虚拟化</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 2.<a href=\"/2023/12/20/%E9%98%BF%E9%87%8C%E4%BA%91/\" title=\"阿里云\">阿里云</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 3.<a href=\"/2023/12/20/%E7%A7%81%E6%9C%89%E4%BA%91/\" title=\"私有云\">私有云</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 4.<a href=\"/2023/12/20/%E5%AE%B9%E5%99%A8Docker/\" title=\"容器Docker\">容器Docker</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 5.<a href=\"/2023/12/20/%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92K8s/\" title=\"容器编排K8s\">容器编排K8s</a></li>\n</ul>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据路线图"],"tags":["大数据"]},{"title":"CDH搭建","url":"/2023/12/20/CDH%E6%90%AD%E5%BB%BA/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","大数据Hadoop离线分布式系统"],"tags":["大数据"]},{"title":"CTR点击率预估","url":"/2023/12/20/CTR%E7%82%B9%E5%87%BB%E7%8E%87%E9%A2%84%E4%BC%B0/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","机器学习"],"tags":["大数据"]},{"title":"Dubbo","url":"/2023/12/20/Dubbo/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","主流框架"],"tags":["大数据"]},{"title":"Flink基础","url":"/2023/12/20/Flink%E5%9F%BA%E7%A1%80/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","大数据Flink实时计算系统"],"tags":["大数据"]},{"title":"ELK技术栈","url":"/2023/12/20/ELK%E6%8A%80%E6%9C%AF%E6%A0%88/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","大数据NoSQL、Kafka和ELK技术实践"],"tags":["大数据"]},{"title":"Flink进阶","url":"/2023/12/20/Flink%E8%BF%9B%E9%98%B6/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","大数据Flink实时计算系统"],"tags":["大数据"]},{"title":"Linux实战","url":"/2023/12/20/Git/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","开发环境"],"tags":["大数据"]},{"title":"Linux实战","url":"/2023/12/20/HDFS%E7%BB%84%E4%BB%B6/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","开发环境"],"tags":["大数据"]},{"title":"Hbase组件","url":"/2023/12/20/Hbase%E7%BB%84%E4%BB%B6/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","大数据NoSQL、Kafka和ELK技术实践"],"tags":["大数据"]},{"title":"Hive组件","url":"/2023/12/20/Hive%E7%BB%84%E4%BB%B6/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","大数据Hadoop离线分布式系统"],"tags":["大数据"]},{"title":"Impala组件","url":"/2023/12/20/Impala%E7%BB%84%E4%BB%B6/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","大数据Hadoop离线分布式系统"],"tags":["大数据"]},{"title":"JVM优化","url":"/2023/12/20/JVM%E4%BC%98%E5%8C%96/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","Java进阶"],"tags":["大数据"]},{"title":"JavaIO流","url":"/2023/12/20/JavaIO%E6%B5%81/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","Java基础"],"tags":["大数据"]},{"title":"Java基础语法","url":"/2023/12/20/Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","Java基础"],"tags":["大数据"]},{"title":"Java多线程","url":"/2023/12/20/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","Java基础"],"tags":["大数据"]},{"title":"Java网络编程","url":"/2023/12/20/Java%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","Java基础"],"tags":["大数据"]},{"title":"Java集合基础","url":"/2023/12/20/Java%E9%9B%86%E5%90%88%E5%9F%BA%E7%A1%80/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","Java基础"],"tags":["大数据"]},{"title":"Java面向对象","url":"/2023/12/20/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","Java基础"],"tags":["大数据"]},{"title":"Kafka组件","url":"/2023/12/20/Kafka%E7%BB%84%E4%BB%B6/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","大数据NoSQL、Kafka和ELK技术实践"],"tags":["大数据"]},{"title":"Lambda&范式编程&枚举","url":"/2023/12/20/Lambda&%E8%8C%83%E5%BC%8F%E7%BC%96%E7%A8%8B&%E6%9E%9A%E4%B8%BE/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","Java进阶"],"tags":["大数据"]},{"title":"MapReduce组件","url":"/2023/12/20/MapReduce%E7%BB%84%E4%BB%B6/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","大数据Hadoop离线分布式系统"],"tags":["大数据"]},{"title":"Maven","url":"/2023/12/20/Maven/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","开发环境"],"tags":["大数据"]},{"title":"MySQL","url":"/2023/12/20/MySQL/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","数据库中间件"],"tags":["大数据"]},{"title":"Mybatis","url":"/2023/12/20/Mybatis/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","数据库中间件"],"tags":["大数据"]},{"title":"Python基础","url":"/2023/12/20/Python%E5%9F%BA%E7%A1%80/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","机器学习"],"tags":["大数据"]},{"title":"Nginx","url":"/2023/12/20/Nginx/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","主流框架"],"tags":["大数据"]},{"title":"Python数据分析","url":"/2023/12/20/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","机器学习"],"tags":["大数据"]},{"title":"Linux实战","url":"/2023/12/20/Linux%E5%AE%9E%E6%88%98/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","开发环境"],"tags":["大数据"]},{"title":"Redis组件","url":"/2023/12/20/Redis%E7%BB%84%E4%BB%B6/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","大数据NoSQL、Kafka和ELK技术实践"],"tags":["大数据"]},{"title":"Scala语言","url":"/2023/12/20/Scala%E8%AF%AD%E8%A8%80/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","大数据Spark内存计算系统"],"tags":["大数据"]},{"title":"Shell编程","url":"/2023/12/20/Shell%E7%BC%96%E7%A8%8B/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","开发环境"],"tags":["大数据"]},{"title":"Spark","url":"/2023/12/20/Spark/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","大数据Spark内存计算系统"],"tags":["大数据"]},{"title":"SparkStream","url":"/2023/12/20/SparkStream/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","大数据Spark内存计算系统"],"tags":["大数据"]},{"title":"SparkSql","url":"/2023/12/20/SparkSql/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","大数据Spark内存计算系统"],"tags":["大数据"]},{"title":"SpringBoot开发","url":"/2023/12/20/SpringBoot%E5%BC%80%E5%8F%91/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","主流框架"],"tags":["大数据"]},{"title":"Linux实战","url":"/2023/12/20/Spring/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","开发环境"],"tags":["大数据"]},{"title":"VSCode编程工具","url":"/2023/12/20/VSCode%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","开发环境"],"tags":["大数据"]},{"title":"SpringMVC","url":"/2023/12/20/SpringMVC/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","主流框架"],"tags":["大数据"]},{"title":"Xml语言","url":"/2023/12/20/Xml%E8%AF%AD%E8%A8%80/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","Java进阶"],"tags":["大数据"]},{"title":"Yarn组件","url":"/2023/12/20/Yarn%E7%BB%84%E4%BB%B6/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","大数据Hadoop离线分布式系统"],"tags":["大数据"]},{"title":"Zookeeper组件","url":"/2023/12/20/Zookeeper%E7%BB%84%E4%BB%B6/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","大数据Hadoop离线分布式系统"],"tags":["大数据"]},{"title":"druid集群","url":"/2023/12/20/druid%E9%9B%86%E7%BE%A4/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","大数据新技术实战详解"],"tags":["大数据"]},{"title":"Linux实战","url":"/2023/12/20/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95&%E6%97%A5%E5%BF%97%E6%8A%80%E6%9C%AF/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","Java进阶"],"tags":["大数据"]},{"title":"大数据Hadoop生态和硬件介绍","url":"/2023/12/20/%E5%A4%A7%E6%95%B0%E6%8D%AEHadoop%E7%94%9F%E6%80%81%E5%92%8C%E7%A1%AC%E4%BB%B6%E4%BB%8B%E7%BB%8D/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","大数据Hadoop离线分布式系统"],"tags":["大数据"]},{"title":"容器Docker","url":"/2023/12/20/%E5%AE%B9%E5%99%A8Docker/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","云计算"],"tags":["大数据"]},{"title":"容器编排K8s","url":"/2023/12/20/%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92K8s/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","大数据Hadoop离线分布式系统"],"tags":["大数据"]},{"title":"微服务SpringCloud","url":"/2023/12/20/%E5%BE%AE%E6%9C%8D%E5%8A%A1SpringCloud/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","主流框架"],"tags":["大数据"]},{"title":"推荐系统","url":"/2023/12/20/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","机器学习"],"tags":["大数据"]},{"title":"搜索引擎ElasticSearch","url":"/2023/12/20/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8EElasticSearch/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","数据库中间件"],"tags":["大数据"]},{"title":"消息中间件RabbitMQ","url":"/2023/12/20/%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6RabbitMQ/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","主流框架"],"tags":["大数据"]},{"title":"用户标签预测","url":"/2023/12/20/%E7%94%A8%E6%88%B7%E6%A0%87%E7%AD%BE%E9%A2%84%E6%B5%8B/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","机器学习"],"tags":["大数据"]},{"title":"类加载器&反射","url":"/2023/12/20/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8&%E5%8F%8D%E5%B0%84/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","开发环境"],"tags":["大数据"]},{"title":"私有云","url":"/2023/12/20/%E7%A7%81%E6%9C%89%E4%BA%91/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","云计算"],"tags":["大数据"]},{"title":"虚拟化","url":"/2023/12/20/%E8%99%9A%E6%8B%9F%E5%8C%96/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","云计算"],"tags":["大数据"]},{"title":"辅助系统工具","url":"/2023/12/20/%E8%BE%85%E5%8A%A9%E7%B3%BB%E7%BB%9F%E5%B7%A5%E5%85%B7/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","大数据Hadoop离线分布式系统"],"tags":["大数据"]},{"title":"阿里云","url":"/2023/12/20/%E9%98%BF%E9%87%8C%E4%BA%91/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["大数据","云计算"],"tags":["大数据"]},{"title":"多线程并发包常用类","url":"/2021/01/28/1-4%20%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%B9%B6%E5%8F%91%E5%8C%85%E5%B8%B8%E7%94%A8%E7%B1%BB/","content":"<h1 id=\"并发包与线程池原理分析\"><a href=\"#并发包与线程池原理分析\" class=\"headerlink\" title=\"并发包与线程池原理分析\"></a>并发包与线程池原理分析</h1><h2 id=\"计数器-CountDownLatch\"><a href=\"#计数器-CountDownLatch\" class=\"headerlink\" title=\"(计数器)CountDownLatch\"></a>(计数器)CountDownLatch</h2><p>CountDownLatch 类位于java.util.concurrent包下，利用它可以实现类似计数器的功能。比如有一个任务A，它要等待其他4个任务执行完毕之后才能执行，此时就可以利用CountDownLatch来实现这种功能了。CountDownLatch是通过一个计数器来实现的，计数器的初始值为线程的数量。每当一个线程完成了自己的任务后，计数器的值就会减1。当计数器值到达0时，它表示所有的线程已经完成了任务，然后在闭锁上等待的线程就可以恢复执行任务。</p>\n<h2 id=\"屏障-CyclicBarrier\"><a href=\"#屏障-CyclicBarrier\" class=\"headerlink\" title=\"(屏障)CyclicBarrier\"></a>(屏障)CyclicBarrier</h2><p>CyclicBarrier初始化时规定一个数目，然后计算调用了CyclicBarrier.await()进入等待的线程数。当线程数达到了这个数目时，所有进入等待状态的线程被唤醒并继续。<br>CyclicBarrier就象它名字的意思一样，可看成是个障碍， 所有的线程必须到齐后才能一起通过这个障碍。<br>CyclicBarrier初始时还可带一个Runnable的参数， 此Runnable任务在CyclicBarrier的数目达到后，所有其它线程被唤醒前被执行。</p>\n<h2 id=\"计数信号量-Semaphore\"><a href=\"#计数信号量-Semaphore\" class=\"headerlink\" title=\"(计数信号量)Semaphore\"></a>(计数信号量)Semaphore</h2><p>Semaphore是一种基于计数的信号量。它可以设定一个阈值，基于此，多个线程竞争获取许可信号，做自己的申请后归还，超过阈值后，线程申请许可信号将会被阻塞。Semaphore可以用来构建一些对象池，资源池之类的，比如数据库连接池，我们也可以创建计数为1的Semaphore，将其作为一种类似互斥锁的机制，这也叫二元信号量，表示两种互斥状态。</p>\n<p>它的用法如下：</p>\n<ul>\n<li>availablePermits函数用来获取当前可用的资源数量</li>\n<li>wc.acquire(); //申请资源</li>\n<li>wc.release();// 释放资源</li>\n</ul>\n<h2 id=\"并发队列\"><a href=\"#并发队列\" class=\"headerlink\" title=\"并发队列\"></a>并发队列</h2><p>在并发队列上JDK提供了两套实现，一个是以ConcurrentLinkedQueue为代表的高性能队<br>列非阻塞5️⃣，一个是以BlockingQueue接口为代表的阻塞队列，无论哪种都继承自Queue。</p>\n<h3 id=\"阻塞队列与非阻塞队\"><a href=\"#阻塞队列与非阻塞队\" class=\"headerlink\" title=\"阻塞队列与非阻塞队\"></a>阻塞队列与非阻塞队</h3><p>阻塞队列与普通队列的区别在于，当队列是空的时，从队列中获取元素的操作将会被阻塞，或者当队列是满时，往队列里添加元素的操作会被阻塞。试图从空的阻塞队列中获取元素的线程将会被阻塞，直到其他的线程往空的队列插入新的元素。同样，试图往已满的阻塞队列中添加新元素的线程同样也会被阻塞，直到其他的线程使队列重新变得空闲起来，如从队列中移除一个或者多个元素，或者完全清空队列.</p>\n<ul>\n<li>1.ArrayDeque, （数组双端队列） </li>\n<li>2.PriorityQueue, （优先级队列） </li>\n<li>3.ConcurrentLinkedQueue, （基于链表的并发队列） </li>\n<li>4.DelayQueue, （延期阻塞队列）（阻塞队列实现了BlockingQueue接口） </li>\n<li>5.ArrayBlockingQueue, （基于数组的并发阻塞队列） </li>\n<li>6.LinkedBlockingQueue, （基于链表的FIFO阻塞队列） </li>\n<li>7.LinkedBlockingDeque, （基于链表的FIFO双端阻塞队列） </li>\n<li>8.PriorityBlockingQueue, （带优先级的无界阻塞队列） </li>\n<li>9.SynchronousQueue （并发同步阻塞队列）</li>\n</ul>\n<h3 id=\"ConcurrentLinkedDeque\"><a href=\"#ConcurrentLinkedDeque\" class=\"headerlink\" title=\"ConcurrentLinkedDeque\"></a>ConcurrentLinkedDeque</h3><p>ConcurrentLinkedQueue : 是一个适用于高并发场景下的队列，通过无锁的方式，实现<br>了高并发状态下的高性能，通常ConcurrentLinkedQueue性能好于BlockingQueue.它<br>是一个基于链接节点的无界线程安全队列。该队列的元素遵循先进先出的原则。头是最先<br>加入的，尾是最近加入的，该队列不允许null元素。</p>\n<p>ConcurrentLinkedQueue重要方法:</p>\n<ul>\n<li>add 和offer() 都是加入元素的方法(在ConcurrentLinkedQueue中这俩个方法没有任何区别)</li>\n<li>poll() 和peek() 都是取头元素节点，区别在于前者会删除元素，后者不会。</li>\n</ul>\n<h3 id=\"BlockingQueue\"><a href=\"#BlockingQueue\" class=\"headerlink\" title=\"BlockingQueue\"></a>BlockingQueue</h3><p>阻塞队列（BlockingQueue）是一个支持两个附加操作的队列。这两个附加的操作是：</p>\n<ul>\n<li>在队列为空时，获取元素的线程会等待队列变为非空。</li>\n<li>当队列满时，存储元素的线程会等待队列可用。 </li>\n</ul>\n<p>阻塞队列常用于生产者和消费者的场景，生产者是往队列里添加元素的线程，消费者是从队列里拿元素的线程。阻塞队列就是生产者存放元素的容器，而消费者也只从容器里拿元素。<br>BlockingQueue即阻塞队列，从阻塞这个词可以看出，在某些情况下对阻塞队列的访问可能会造成阻塞。被阻塞的情况主要有如下两种：</p>\n<ol>\n<li>当队列满了的时候进行入队列操作</li>\n<li>当队列空了的时候进行出队列操作</li>\n</ol>\n<p>因此，当一个线程试图对一个已经满了的队列进行入队列操作时，它将会被阻塞，除非有另一个线程做了出队列操作；同样，当一个线程试图对一个空队列进行出队列操作时，它将会被阻塞，除非有另一个线程进行了入队列操作。</p>\n<p>在Java中，BlockingQueue的接口位于java.util.concurrent 包中(在Java5版本开始提供)，由上面介绍的阻塞队列的特性可知，阻塞队列是线程安全的。</p>\n<p>在新增的Concurrent包中，BlockingQueue很好的解决了多线程中，如何高效安全“传输”数据的问题。通过这些高效并且线程安全的队列类，为我们快速搭建高质量的多线程程序带来极大的便利。</p>\n<h3 id=\"认识BlockingQueue\"><a href=\"#认识BlockingQueue\" class=\"headerlink\" title=\"认识BlockingQueue\"></a>认识BlockingQueue</h3><p>阻塞队列，顾名思义，首先它是一个队列，而一个队列在数据结构中所起的作用大致为：通过一个共享的队列，可以使得数据由队列的一端输入，从另外一端输出；</p>\n<p>常用的队列主要有以下两种：（当然通过不同的实现方式，还可以延伸出很多不同类型的队列，DelayQueue就是其中的一种）<br>　　- 先进先出（FIFO）：先插入的队列的元素也最先出队列，类似于排队的功能。从某种程度上来说这种队列也体现了一种公平性。<br>　　- 后进先出（LIFO）：后插入队列的元素最先出队列，这种队列优先处理最近发生的事件。</p>\n<p>多线程环境中，通过队列可以很容易实现数据共享，比如经典的“生产者”和“消费者”模型中，通过队列可以很便利地实现两者之间的数据共享。假设我们有若干生产者线程，另外又有若干个消费者线程。如果生产者线程需要把准备好的数据共享给消费者线程，利用队列的方式来传递数据，就可以很方便地解决他们之间的数据共享问题。但如果生产者和消费者在某个时间段内，万一发生数据处理速度不匹配的情况呢？理想情况下，如果生产者产出数据的速度大于消费者消费的速度，并且当生产出来的数据累积到一定程度的时候，那么生产者必须暂停等待一下（阻塞生产者线程），以便等待消费者线程把累积的数据处理完毕，反之亦然。然而，在concurrent包发布以前，在多线程环境下，我们每个程序员都必须去自己控制这些细节，尤其还要兼顾效率和线程安全，而这会给我们的程序带来不小的复杂度。好在此时，强大的concurrent包横空出世了，而他也给我们带来了强大的BlockingQueue。（在多线程领域：所谓阻塞，在某些情况下会挂起线程（即阻塞），一旦条件满足，被挂起的线程又会自动被唤醒）。</p>\n<h3 id=\"ArrayBlockingQueue\"><a href=\"#ArrayBlockingQueue\" class=\"headerlink\" title=\"ArrayBlockingQueue\"></a>ArrayBlockingQueue</h3><p>ArrayBlockingQueue是一个有边界的阻塞队列，它的内部实现是一个数组。有边界的意思是它的容量是有限的，我们必须在其初始化的时候指定它的容量大小，容量大小一旦指定就不可改变。</p>\n<p>ArrayBlockingQueue是以先进先出的方式存储数据，最新插入的对象是尾部，最新移出的对象是头部。</p>\n<h3 id=\"LinkedBlockingQueue\"><a href=\"#LinkedBlockingQueue\" class=\"headerlink\" title=\"LinkedBlockingQueue\"></a>LinkedBlockingQueue</h3><p>LinkedBlockingQueue阻塞队列大小的配置是可选的，如果我们初始化时指定一个大小，它就是有边界的，如果不指定，它就是无边界的。说是无边界，其实是采用了默认大小为Integer.MAX_VALUE的容量 。它的内部实现是一个链表。和ArrayBlockingQueue一样，LinkedBlockingQueue 也是以先进先出的方式存储数据，最新插入的对象是尾部，最新移出的对象是头部。</p>\n<h3 id=\"PriorityBlockingQueue\"><a href=\"#PriorityBlockingQueue\" class=\"headerlink\" title=\"PriorityBlockingQueue\"></a>PriorityBlockingQueue</h3><p>PriorityBlockingQueue是一个没有边界的队列，它的排序规则和 java.util.PriorityQueue一样。需要注意，PriorityBlockingQueue中允许插入null对象。<br>所有插入PriorityBlockingQueue的对象必须实现 java.lang.Comparable接口，队列优先级的排序规则就是按照我们对这个接口的实现来定义的。</p>\n<p>另外，我们可以从PriorityBlockingQueue获得一个迭代器Iterator，但这个迭代器并不保证按照优先级顺序进行迭代。</p>\n<h3 id=\"SynchronousQueue\"><a href=\"#SynchronousQueue\" class=\"headerlink\" title=\"SynchronousQueue\"></a>SynchronousQueue</h3><p>SynchronousQueue队列内部仅允许容纳一个元素。当一个线程插入一个元素后会被阻塞，除非这个元素被另一个线程消费。</p>\n<h2 id=\"线程池\"><a href=\"#线程池\" class=\"headerlink\" title=\"线程池\"></a>线程池</h2><p>Java中的线程池是运用场景最多的并发框架，几乎所有需要异步或并发执行任务的程序<br>都可以使用线程池。在开发过程中，合理地使用线程池能够带来3个好处。</p>\n<ul>\n<li>第一：降低资源消耗。通过重复利用已创建的线程降低线程创建和销毁造成的消耗。</li>\n<li>第二：提高响应速度。当任务到达时，任务可以不需要等到线程创建就能立即执行。</li>\n<li>第三：提高线程的可管理性。线程是稀缺资源，如果无限制地创建，不仅会消耗系统资源，<br>还会降低系统的稳定性，使用线程池可以进行统一分配、调优和监控。但是，要做到合理利用<br>线程池，必须对其实现原理了如指掌。</li>\n</ul>\n<h2 id=\"线程池作用\"><a href=\"#线程池作用\" class=\"headerlink\" title=\"线程池作用\"></a>线程池作用</h2><p>线程池是为突然大量爆发的线程设计的，通过有限的几个固定线程为大量的操作服务，减少了创建和销毁线程所需的时间，从而提高效率。如果一个线程的时间非常长，就没必要用线程池了(不是不能作长时间操作，而是不宜。)，况且我们还不能控制线程池中线程的开始、挂起、和中止。</p>\n<h2 id=\"线程池的分类\"><a href=\"#线程池的分类\" class=\"headerlink\" title=\"线程池的分类\"></a>线程池的分类</h2><h3 id=\"ThreadPoolExecutor\"><a href=\"#ThreadPoolExecutor\" class=\"headerlink\" title=\"ThreadPoolExecutor\"></a>ThreadPoolExecutor</h3><p>Java是天生就支持并发的语言，支持并发意味着多线程，线程的频繁创建在高并发及大数据量是非常消耗资源的，因为java提供了线程池。在jdk1.5以前的版本中，线程池的使用是及其简陋的，但是在JDK1.5后，有了很大的改善。JDK1.5之后加入了java.util.concurrent包，java.util.concurrent包的加入给予开发人员开发并发程序以及解决并发问题很大的帮助。</p>\n<p>Executor接口虽然作为一个非常旧的接口（JDK1.5 2004年发布），Executor框架的最顶层实现是ThreadPoolExecutor类，Executors工厂类中提供的newScheduledThreadPool、newFixedThreadPool、newCachedThreadPool方法其实也只是ThreadPoolExecutor的构造函数参数不同而已。通过传入不同的参数，就可以构造出适用于不同应用场景下的线程池，那么它的底层原理是怎样实现的呢，这篇就来介绍下ThreadPoolExecutor线程池的运行过程。</p>\n<ul>\n<li>corePoolSize： 核心池的大小。 当有任务来之后，就会创建一个线程去执行任务，当线程池中的线程数目达到corePoolSize后，就会把到达的任务放到缓存队列当中</li>\n<li>maximumPoolSize： 线程池最大线程数，它表示在线程池中最多能创建多少个线程；</li>\n<li>keepAliveTime： 表示线程没有任务执行时最多保持多久时间会终止。</li>\n<li>unit： 参数keepAliveTime的时间单位。</li>\n</ul>\n<h3 id=\"线程池四种创建方式\"><a href=\"#线程池四种创建方式\" class=\"headerlink\" title=\"线程池四种创建方式\"></a>线程池四种创建方式</h3><p>Java通过Executors（jdk1.5并发包）提供四种线程池，分别为：</p>\n<ul>\n<li>newCachedThreadPool创建一个可缓存线程池，如果线程池长度超过处理需要，可灵活回收空闲线程，若无可回收，则新建线程。</li>\n<li>newFixedThreadPool 创建一个定长线程池，可控制线程最大并发数，超出的线程会在队列中等待。</li>\n<li>newScheduledThreadPool 创建一个定长线程池，支持定时及周期性任务执行。</li>\n<li>newSingleThreadExecutor 创建一个单线程化的线程池，它只会用唯一的工作线程来执行任务，保证所有任务按照指定顺序(FIFO, LIFO, 优先级)执行。</li>\n</ul>\n<h3 id=\"newCachedThreadPool\"><a href=\"#newCachedThreadPool\" class=\"headerlink\" title=\"newCachedThreadPool\"></a>newCachedThreadPool</h3><p>创建一个可缓存线程池，如果线程池长度超过处理需要，可灵活回收空闲线程，若无可回收，则新建线程。</p>\n<p><strong>总结: 线程池为无限大，当执行第二个任务时第一个任务已经完成，会复用执行第一个任务的线程，而不用每次新建线程。</strong></p>\n<h3 id=\"newFixedThreadPool\"><a href=\"#newFixedThreadPool\" class=\"headerlink\" title=\"newFixedThreadPool\"></a>newFixedThreadPool</h3><p><strong>总结:因为线程池大小为3，每个任务输出index后sleep 2秒，所以每两秒打印3个数字。<br>定长线程池的大小最好根据系统资源进行设置。</strong></p>\n<p>如Runtime.getRuntime().availableProcessors()<br>newScheduledThreadPool<br>创建一个定长线程池，支持定时及周期性任务执行。</p>\n<h3 id=\"newSingleThreadExecutor\"><a href=\"#newSingleThreadExecutor\" class=\"headerlink\" title=\"newSingleThreadExecutor\"></a>newSingleThreadExecutor</h3><p>创建一个单线程化的线程池，它只会用唯一的工作线程来执行任务，保证所有任务按照指定顺序(FIFO, LIFO, 优先级)执行。<strong>注意: 结果依次输出，相当于顺序执行各个任务。</strong></p>\n<h3 id=\"线程池原理剖析\"><a href=\"#线程池原理剖析\" class=\"headerlink\" title=\"线程池原理剖析\"></a>线程池原理剖析</h3><p>提交一个任务到线程池中，线程池的处理流程如下：</p>\n<ul>\n<li>1、判断线程池里的核心线程是否都在执行任务，如果不是（核心线程空闲或者还有核心线程没有被创建）则创建一个新的工作线程来执行任务。如果核心线程都在执行任务，则进入下个流程。</li>\n<li>2、线程池判断工作队列是否已满，如果工作队列没有满，则将新提交的任务存储在这个工作队列里。如果工作队列满了，则进入下个流程。</li>\n<li>3、判断线程池里的线程是否都处于工作状态，如果没有，则创建一个新的工作线程来执行任务。如果已经满了，则交给饱和策略来处理这个任务。</li>\n</ul>\n<p><img data-src=\"threadpool.png\" alt=\"Java线程池原理\"></p>\n<h3 id=\"自定义线程线程池\"><a href=\"#自定义线程线程池\" class=\"headerlink\" title=\"自定义线程线程池\"></a>自定义线程线程池</h3><p>如果当前线程池中的线程数目小于corePoolSize，则每来一个任务，就会创建一个线程去执行这个任务；</p>\n<p>如果当前线程池中的线程数目&gt;=corePoolSize，则每来一个任务，会尝试将其添加到任务缓存队列当中，若添加成功，则该任务会等待空闲线程将其取出去执行；若添加失败（一般来说是任务缓存队列已满），则会尝试创建新的线程去执行这个任务；</p>\n<p>如果队列已经满了，则在总线程数不大于maximumPoolSize的前提下，则创建新的线程<br>如果当前线程池中的线程数目达到maximumPoolSize，则会采取任务拒绝策略进行处理；</p>\n<p>如果线程池中的线程数量大于 corePoolSize时，如果某线程空闲时间超过keepAliveTime，线程将被终止，直至线程池中的线程数目不大于corePoolSize；如果允许为核心池中的线程设置存活时间，那么核心池中的线程空闲时间超过keepAliveTime，线程也会被终止。</p>\n<h3 id=\"合理配置线程池\"><a href=\"#合理配置线程池\" class=\"headerlink\" title=\"合理配置线程池\"></a>合理配置线程池</h3><ul>\n<li><p>CPU密集<br>CPU密集的意思是该任务需要大量的运算，而没有阻塞，CPU一直全速运行。<br>CPU密集任务只有在真正的多核CPU上才可能得到加速(通过多线程)，而在单核CPU上，无论你开几个模拟的多线程，该任务都不可能得到加速，因为CPU总的运算能力就那些。</p>\n</li>\n<li><p>IO密集<br>IO密集型，即该任务需要大量的IO，即大量的阻塞。在单线程上运行IO密集型的任务会导致浪费大量的CPU运算能力浪费在等待。所以在IO密集型任务中使用多线程可以大大的加速程序运行，即时在单核CPU上，这种加速主要就是利用了被浪费掉的阻塞时间。</p>\n</li>\n</ul>\n<h3 id=\"如何合理的设置线程池大小\"><a href=\"#如何合理的设置线程池大小\" class=\"headerlink\" title=\"如何合理的设置线程池大小\"></a>如何合理的设置线程池大小</h3><p>要想合理的配置线程池的大小，首先得分析任务的特性，可以从以下几个角度分析：</p>\n<ol>\n<li>任务的性质：CPU密集型任务、IO密集型任务、混合型任务。</li>\n<li>任务的优先级：高、中、低。</li>\n<li>任务的执行时间：长、中、短。</li>\n<li>任务的依赖性：是否依赖其他系统资源，如数据库连接等。</li>\n</ol>\n<p>性质不同的任务可以交给不同规模的线程池执行。</p>\n<ul>\n<li>对于不同性质的任务来说，CPU密集型任务应配置尽可能小的线程，如配置CPU个数+1的线程数，IO密集型任务应配置尽可能多的线程，因为IO操作不占用CPU，不要让CPU闲下来，应加大线程数量，如配置两倍CPU个数+1，而对于混合型的任务，如果可以拆分，拆分成IO密集型和CPU密集型分别处理，前提是两者运行的时间是差不多的，如果处理时间相差很大，则没必要拆分了。</li>\n<li>若任务对其他系统资源有依赖，如某个任务依赖数据库的连接返回的结果，这时候等待的时间越长，则CPU空闲的时间越长，那么线程数量应设置得越大，才能更好的利用CPU。<br>当然具体合理线程池值大小，需要结合系统实际情况，在大量的尝试下比较才能得出，以上只是前人总结的规律。</li>\n<li>最佳线程数目 = （（线程等待时间+线程CPU时间）/线程CPU时间 ）* CPU数目<br>比如平均每个线程CPU运行时间为0.5s，而线程等待时间（非CPU运行时间，比如IO）为1.5s，CPU核心数为8，那么根据上面这个公式估算得到：((0.5+1.5)/0.5)<em>8=32。这个公式进一步转化为：<br>最佳线程数目 = （线程等待时间与线程CPU时间之比 + 1）</em> CPU数目。</li>\n</ul>\n<p>可以得出一个结论：<br><strong>线程等待时间所占比例越高，需要越多线程。线程CPU时间所占比例越高，需要越少线程。</strong> </p>\n<p>以上公式与之前的CPU和IO密集型任务设置线程数基本吻合。</p>\n<ul>\n<li>CPU密集型时，任务可以少配置线程数，大概和机器的cpu核数相当，这样可以使得每个线程都在执行任务</li>\n<li>IO密集型时，大部分线程都阻塞，故需要多配置线程数，2*cpu核数</li>\n</ul>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["并发编程","并发包与线程池"],"tags":["并发编程"]},{"title":"多线程之间通讯","url":"/2021/01/28/1-3%20%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B9%8B%E9%97%B4%E9%80%9A%E8%AE%AF/","content":"<h1 id=\"多线程之间实现通讯\"><a href=\"#多线程之间实现通讯\" class=\"headerlink\" title=\"多线程之间实现通讯\"></a>多线程之间实现通讯</h1><h2 id=\"多线程之间如何实现通讯\"><a href=\"#多线程之间如何实现通讯\" class=\"headerlink\" title=\"多线程之间如何实现通讯\"></a>多线程之间如何实现通讯</h2><h3 id=\"什么是多线程之间通讯？\"><a href=\"#什么是多线程之间通讯？\" class=\"headerlink\" title=\"什么是多线程之间通讯？\"></a>什么是多线程之间通讯？</h3><p>   多线程之间通讯，其实就是多个线程在操作同一个资源，但是操作的动作不同。</p>\n<h2 id=\"wait、notify方法\"><a href=\"#wait、notify方法\" class=\"headerlink\" title=\"wait、notify方法\"></a>wait、notify方法</h2><ul>\n<li>因为涉及到对象锁,他们必须都放在synchronized中来使用. Wait、Notify一定要在synchronized里面进行使用。</li>\n<li>Wait必须暂定当前正在执行的线程,并释放资源锁,让其他线程可以有机会运行</li>\n<li>notify/notifyall: 唤醒因锁池中的线程,使之运行</li>\n</ul>\n<p><strong>注意:一定要在线程同步中使用,并且是同一个锁的资源</strong></p>\n<h2 id=\"wait与sleep区别\"><a href=\"#wait与sleep区别\" class=\"headerlink\" title=\"wait与sleep区别\"></a>wait与sleep区别</h2><ul>\n<li>对于sleep()方法，我们首先要知道该方法是属于Thread类中的。而wait()方法，则是属于Object类中的。</li>\n<li>sleep()方法导致了程序暂停执行指定的时间，让出cpu给其他线程，但是他的监控状态依然保持者，当指定的时间到了又会自动恢复运行状态。</li>\n<li>在调用sleep()方法的过程中，线程不会释放对象锁。<br>而当调用wait()方法的时候，线程会放弃对象锁，进入等待此对象的等待锁定池，只有针对此对象调用notify()方法后本线程才进入对象锁定池准备，获取对象锁进入运行状态。</li>\n</ul>\n<h2 id=\"Lock锁\"><a href=\"#Lock锁\" class=\"headerlink\" title=\"Lock锁\"></a>Lock锁</h2><p>在 jdk1.5 之后，并发包中新增了 Lock 接口(以及相关实现类)用来实现锁功能，Lock 接口提供了与 synchronized 关键字类似的同步功能，但需要在使用时手动获取锁和释放锁。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Lock写法</span><br><span class=\"line\">Lock lock  &#x3D; new ReentrantLock();</span><br><span class=\"line\">lock.lock();</span><br><span class=\"line\">try&#123;</span><br><span class=\"line\">&#x2F;&#x2F;可能会出现线程安全的操作</span><br><span class=\"line\">&#125;finally&#123;</span><br><span class=\"line\">&#x2F;&#x2F;一定在finally中释放锁</span><br><span class=\"line\">&#x2F;&#x2F;也不能把获取锁在try中进行，因为有可能在获取锁的时候抛出异常</span><br><span class=\"line\">  lock.ublock();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Lock与synchronized-关键字的区别\"><a href=\"#Lock与synchronized-关键字的区别\" class=\"headerlink\" title=\"Lock与synchronized 关键字的区别\"></a>Lock与synchronized 关键字的区别</h3><ul>\n<li>Lock 接口可以尝试非阻塞地获取锁 当前线程尝试获取锁。如果这一时刻锁没有被其他线程获取到，则成功获取并持有锁。</li>\n<li>Lock 接口能被中断地获取锁 与 synchronized 不同，获取到锁的线程能够响应中断，当获取到的锁的线程被中断时，中断异常将会被抛出，同时锁会被释放。</li>\n<li>Lock 接口在指定的截止时间之前获取锁，如果截止时间到了依旧无法获取锁，则返回。</li>\n</ul>\n<h2 id=\"Condition用法\"><a href=\"#Condition用法\" class=\"headerlink\" title=\"Condition用法\"></a>Condition用法</h2><p> Condition的功能类似于在传统的线程技术中的,Object.wait()和Object.notify()的功能。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">代码:</span><br><span class=\"line\">Condition condition &#x3D; lock.newCondition();</span><br><span class=\"line\">res. condition.await();  类似wait</span><br><span class=\"line\">res. Condition. Signal() 类似notify</span><br></pre></td></tr></table></figure>\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["并发编程","线程通讯"],"tags":["并发编程"]},{"title":"多线程线程安全","url":"/2021/01/19/1-2%20%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8/","content":"<h1 id=\"多线程线程安全\"><a href=\"#多线程线程安全\" class=\"headerlink\" title=\"多线程线程安全\"></a>多线程线程安全</h1><h2 id=\"什么是线程安全？\"><a href=\"#什么是线程安全？\" class=\"headerlink\" title=\"什么是线程安全？\"></a>什么是线程安全？</h2><p>当多个线程同时共享，同一个<strong>全局变量或静态变量</strong>，做<strong>写</strong>的操作时，可能会发生数据冲突问题，也就是线程安全问题。但是做读操作是不会发生数据冲突问题。</p>\n<p><strong>结论:多个线程共享同一个全局成员变量时，做写的操作可能会发生数据冲突问题。</strong></p>\n<h2 id=\"线程安全解决办法\"><a href=\"#线程安全解决办法\" class=\"headerlink\" title=\"线程安全解决办法\"></a>线程安全解决办法</h2><h3 id=\"如何解决多线程之间线程安全问题\"><a href=\"#如何解决多线程之间线程安全问题\" class=\"headerlink\" title=\"如何解决多线程之间线程安全问题\"></a>如何解决多线程之间线程安全问题</h3><p>使用多线程之间同步 synchronized 或使用锁(lock)。</p>\n<h3 id=\"为什么使用线程同步或使用锁能解决线程安全问题呢？\"><a href=\"#为什么使用线程同步或使用锁能解决线程安全问题呢？\" class=\"headerlink\" title=\"为什么使用线程同步或使用锁能解决线程安全问题呢？\"></a>为什么使用线程同步或使用锁能解决线程安全问题呢？</h3><p>将可能会发生数据冲突问题(线程不安全问题)，只能让当前一个线程进行执行。代码执行完成后释放锁，让后才能让其他线程进行执行。这样的话就可以解决线程不安全问题。</p>\n<h3 id=\"什么是多线程之间同步\"><a href=\"#什么是多线程之间同步\" class=\"headerlink\" title=\"什么是多线程之间同步\"></a>什么是多线程之间同步</h3><p>当多个线程共享同一个资源,不会受到其他线程的干扰。</p>\n<h2 id=\"内置的锁\"><a href=\"#内置的锁\" class=\"headerlink\" title=\"内置的锁\"></a>内置的锁</h2><p>Java 提供了一种内置的锁机制来支持原子性<br>每一个<strong>Java 对象</strong>都可以用作一个实现同步的锁，称为内置锁，线程进入同步代码块之前自动获取到锁，代码块执行完成正常退出或代码块中抛出异常退出时会释放掉锁。</p>\n<p>内置锁为互斥锁，即线程 A 获取到锁后，线程 B 阻塞直到线程 A 释放锁，线程 B 才能获取到同一个锁。</p>\n<p>内置锁使用 synchronized 关键字实现，synchronized 关键字有两种用法：<strong>1.修饰需要进行同步的方法（所有访问状态变量的方法都必须进行同步），此时充当锁的对象为调用同步方法的对象。 2.同步代码块和直接使用 synchronized 修饰需要同步的方法是一样的，但是锁的粒度可以更细，并且充当锁的对象不一定是 this，也可以是其它对象，所以使用起来更加灵活</strong></p>\n<h3 id=\"同步代码块-synchronized\"><a href=\"#同步代码块-synchronized\" class=\"headerlink\" title=\"同步代码块 synchronized\"></a>同步代码块 synchronized</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">就是将可能会发生线程安全问题的代码，给包括起来。</span><br><span class=\"line\"></span><br><span class=\"line\">synchronized(同一个数据)&#123;</span><br><span class=\"line\">可能会发生线程冲突问题</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">就是同步代码块  </span><br><span class=\"line\"></span><br><span class=\"line\">synchronized(对象)&#x2F;&#x2F;这个对象可以为任意对象  </span><br><span class=\"line\">&#123; </span><br><span class=\"line\">     需要被同步的代码  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">对象如同锁，持有锁的线程可以在同步中执行  </span><br><span class=\"line\">没持有锁的线程即使获取 CPU 的执行权，也进不去</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"同步的前提\"><a href=\"#同步的前提\" class=\"headerlink\" title=\"同步的前提\"></a>同步的前提</h3><ul>\n<li><p>必须要有两个或者两个以上的线程</p>\n</li>\n<li><p>必须是多个线程使用同一个锁</p>\n</li>\n<li><p>必须保证同步中只能有一个线程在运行</p>\n<p>好处：解决了多线程的安全问题。</p>\n<p>弊端：多个线程需要判断锁，较为消耗资源、抢锁的资源。</p>\n</li>\n</ul>\n<h3 id=\"同步方法\"><a href=\"#同步方法\" class=\"headerlink\" title=\"同步方法\"></a>同步方法</h3><h4 id=\"什么是同步方法？\"><a href=\"#什么是同步方法？\" class=\"headerlink\" title=\"什么是同步方法？\"></a>什么是同步方法？</h4><p>在方法上修饰 synchronized 称为同步方法。</p>\n<h4 id=\"同步方法使用的是什么锁？\"><a href=\"#同步方法使用的是什么锁？\" class=\"headerlink\" title=\"同步方法使用的是什么锁？\"></a>同步方法使用的是什么锁？</h4><p>同步函数使用 this 锁。</p>\n<p>证明方式: 一个线程使用同步代码块(this 明锁),另一个线程使用同步函数。如果两个线程抢票不能实现同步，那么会出现数据错误。</p>\n<h3 id=\"静态同步函数\"><a href=\"#静态同步函数\" class=\"headerlink\" title=\"静态同步函数\"></a>静态同步函数</h3><h4 id=\"什么是静态同步函数？\"><a href=\"#什么是静态同步函数？\" class=\"headerlink\" title=\"什么是静态同步函数？\"></a>什么是静态同步函数？</h4><p>方法上加上 static 关键字，使用 synchronized 关键字修饰 或者使用类.class 文件。</p>\n<p>静态的同步函数使用的锁是 该函数所属字节码文件对象<br>可以用 getClass 方法获取，也可以用当前 类名.class 表示。</p>\n<p><strong>总结：</strong></p>\n<p>synchronized 修饰方法使用锁是<strong>当前 this 锁</strong>。</p>\n<p>synchronized 修饰静态方法使用锁是<strong>当前类的字节码文件</strong>。</p>\n<h3 id=\"多线程死锁\"><a href=\"#多线程死锁\" class=\"headerlink\" title=\"多线程死锁\"></a>多线程死锁</h3><h4 id=\"什么是多线程死锁？\"><a href=\"#什么是多线程死锁？\" class=\"headerlink\" title=\"什么是多线程死锁？\"></a>什么是多线程死锁？</h4><p>同步中嵌套同步,导致锁无法释放</p>\n<h2 id=\"Threadlocal\"><a href=\"#Threadlocal\" class=\"headerlink\" title=\"Threadlocal\"></a>Threadlocal</h2><h3 id=\"什么是-Threadlocal\"><a href=\"#什么是-Threadlocal\" class=\"headerlink\" title=\"什么是 Threadlocal\"></a>什么是 Threadlocal</h3><p>ThreadLocal 提高一个线程的局部变量，访问某个线程拥有自己局部变量。<br>当使用 ThreadLocal 维护变量时，ThreadLocal 为每个使用该变量的线程提供独立的变量副本，所以<strong>每一个线程都可以独立地改变自己的副本，而不会影响其它线程所对应的副本</strong>。</p>\n<h3 id=\"ThreadLocal-的接口方法\"><a href=\"#ThreadLocal-的接口方法\" class=\"headerlink\" title=\"ThreadLocal 的接口方法\"></a>ThreadLocal 的接口方法</h3><p>• <strong>void set(Object value)</strong> 设置当前线程的线程局部变量的值。</p>\n<p>• <strong>public Object get()</strong> 该方法返回当前线程所对应的线程局部变量。</p>\n<p>• <strong>public void remove()</strong> 将当前线程局部变量的值删除，目的是为了减少内存的占用，该方法是 JDK 5.0 新增的方法。需要指出的是，当线程结束后，对应该线程的局部变量将自动被垃圾回收，所以显式调用该方法清除线程的局部变量并不是必须的操作，但它可以加快内存回收的速度。</p>\n<p>• <strong>protected Object initialValue()</strong> 返回该线程局部变量的初始值，该方法是一个 protected 的方法，显然是为了让子类覆盖而设计的。这个方法是一个延迟调用方法，在线程第 1 次调用 get()或 set(Object)时才执行，并且仅执行 1 次。ThreadLocal 中的缺省实现直接返回一个 null。</p>\n<h3 id=\"ThreadLoca-实现原理\"><a href=\"#ThreadLoca-实现原理\" class=\"headerlink\" title=\"ThreadLoca 实现原理\"></a>ThreadLoca 实现原理</h3><p>ThreadLoca 通过 map 集合，Map.put(“当前线程”,值)；</p>\n<h2 id=\"多线程有三大特性\"><a href=\"#多线程有三大特性\" class=\"headerlink\" title=\"多线程有三大特性\"></a>多线程有三大特性</h2><blockquote>\n<p>原子性、可见性、有序性</p>\n</blockquote>\n<h3 id=\"什么是原子性\"><a href=\"#什么是原子性\" class=\"headerlink\" title=\"什么是原子性\"></a>什么是原子性</h3><p>一个操作或者多个操作 要么全部执行并且执行的过程不会被任何因素打断，要么就都不执行。</p>\n<p>一个很经典的例子就是银行账户转账问题：<br>比如从账户 A 向账户 B 转 1000 元，那么必然包括 2 个操作：从账户 A 减去 1000 元，往账户 B 加上 1000 元。这 2 个操作必须要具备原子性才能保证不出现一些意外的问题。</p>\n<p>我们操作数据也是如此，比如 i = i+1；其中就包括，读取 i 的值，计算 i，写入 i。这行代码在 Java 中是不具备原子性的，则多线程运行肯定会出问题，所以也需要我们使用同步和 lock 这些东西来确保这个特性了。</p>\n<p><strong>原子性其实就是保证数据一致、线程安全一部分</strong></p>\n<h3 id=\"什么是可见性\"><a href=\"#什么是可见性\" class=\"headerlink\" title=\"什么是可见性\"></a>什么是可见性</h3><p>当多个线程访问同一个变量时，一个线程修改了这个变量的值，其他线程能够立即看得到修改的值。</p>\n<p>若两个线程在不同的 cpu，那么线程 1 改变了 i 的值还没刷新到主存，线程 2 又使用了 i，那么这个 i 值肯定还是之前的，线程 1 对变量的修改线程没看到这就是可见性问题。</p>\n<h3 id=\"什么是有序性\"><a href=\"#什么是有序性\" class=\"headerlink\" title=\"什么是有序性\"></a>什么是有序性</h3><p>程序执行的顺序按照代码的先后顺序执行。<br>一般来说处理器为了提高程序运行效率，可能会对输入代码进行优化，它不保证程序中各个语句的执行先后顺序同代码中的顺序一致，但是它会保证程序最终执行结果和代码顺序执行的结果是一致的。如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">int a &#x3D; 10; &#x2F;&#x2F;语句 1</span><br><span class=\"line\">int r &#x3D; 2; &#x2F;&#x2F;语句 2</span><br><span class=\"line\">a &#x3D; a + 3; &#x2F;&#x2F;语句 3</span><br><span class=\"line\">r &#x3D; a\\*a; &#x2F;&#x2F;语句 4</span><br></pre></td></tr></table></figure>\n\n<p>则因为重排序，他还可能执行顺序为 2-1-3-4，1-3-2-4<br>但绝不可能 2-1-4-3，因为这打破了依赖关系。<br>显然重排序对单线程运行是不会有任何问题，而多线程就不一定了，所以我们在多线程编程时就得考虑这个问题了。</p>\n<h2 id=\"Java-内存模型\"><a href=\"#Java-内存模型\" class=\"headerlink\" title=\"Java 内存模型\"></a>Java 内存模型</h2><h3 id=\"共享内存模型\"><a href=\"#共享内存模型\" class=\"headerlink\" title=\"共享内存模型\"></a>共享内存模型</h3><p><strong>Java 内存模型(简称 JMM)，JMM 决定一个线程对共享变量的写入时,能对另一个线程可见。</strong> 从抽象的角度来看，<strong>JMM 定义了线程和主内存之间的抽象关系：线程之间的共享变量存储在主内存（main memory）中，每个线程都有一个私有的本地内存（local memory），本地内存中存储了该线程以读/写共享变量的副本</strong>。本地内存是 JMM 的一个抽象概念，并不真实存在。它涵盖了缓存，写缓冲区，寄存器以及其他的硬件和编译器优化。例如：<img data-src=\"jmm.png\" alt=\"Java内存模型\"></p>\n<p>从上图来看，线程 A 与线程 B 之间如要通信的话，必须要经历下面 2 个步骤：</p>\n<ol>\n<li>首先，线程 A 把本地内存 A 中更新过的共享变量刷新到主内存中去。</li>\n<li>然后，线程 B 到主内存中去读取线程 A 之前已更新过的共享变量。</li>\n</ol>\n<p>下面通过示意图来说明这两个步骤：<img data-src=\"jmm2.png\" alt=\"Java线程通信\"></p>\n<p>如上图所示，本地内存 A 和 B 有主内存中共享变量 x 的副本。假设初始时，这三个内存中的 x 值都为 0。线程 A 在执行时，把更新后的 x 值（假设值为 1）临时存放在自己的本地内存 A 中。当线程 A 和线程 B 需要通信时，线程 A 首先会把自己本地内存中修改后的 x 值刷新到主内存中，此时主内存中的 x 值变为了 1。随后，线程 B 到主内存中去读取线程 A 更新后的 x 值，此时线程 B 的本地内存的 x 值也变为了 1。</p>\n<p>从整体来看，<strong>这两个步骤实质上是线程 A 在向线程 B 发送消息，而且这个通信过程必须要经过主内存。JMM 通过控制主内存与每个线程的本地内存之间的交互，来为 java 程序员提供内存可见性保证。</strong></p>\n<p><strong>总结：Java 内存模型，简称 JMM，定义了一个线程对另一个线程可见。共享变量存放在主内存中，每个线程都有自己的本地内存，当多个线程同时访问一个数据的时候，可能本地内存没有及时刷新到主内存，所以就会发生线程安全问题。</strong></p>\n<h2 id=\"Volatile\"><a href=\"#Volatile\" class=\"headerlink\" title=\"Volatile\"></a>Volatile</h2><h3 id=\"什么是-Volatile\"><a href=\"#什么是-Volatile\" class=\"headerlink\" title=\"什么是 Volatile\"></a>什么是 Volatile</h3><p>可见性也就是说一旦某个线程修改了该被 volatile 修饰的变量，它会<strong>保证修改的值会立即被更新到主存</strong>，当有其他线程需要读取时，可以立即获取修改之后的值。</p>\n<p>在 Java 中为了加快程序的运行效率，对一些变量的操作通常是在该线程的寄存器或是 CPU 缓存上进行的，之后才会同步到主存中，而加了 volatile 修饰符的变量则是直接读写主存。<strong>Volatile 保证了线程间共享变量的及时可见性，但不能保证原子性。</strong></p>\n<h3 id=\"Volatile-特性\"><a href=\"#Volatile-特性\" class=\"headerlink\" title=\"Volatile 特性\"></a>Volatile 特性</h3><p>1.<strong>保证此变量对所有的线程的可见性</strong>，这里的“可见性”，如本文开头所述，当一个线程修改了这个变量的值，volatile 保证了新值能立即同步到主内存，以及每次使用前立即从主内存刷新。但普通变量做不到这点，普通变量的值在线程间传递均需要通过主内存（详见：Java 内存模型）来完成。</p>\n<p>2.<strong>禁止指令重排序优化</strong>。有 volatile 修饰的变量，赋值后多执行了一个“load addl $0x0, (%esp)”操作，这个操作相当于一个内存屏障（指令重排序时不能把后面的指令重排序到内存屏障之前的位置），只有一个 CPU 访问内存时，并不需要内存屏障；（什么是指令重排序：是指 CPU 采用了允许将多条指令不按程序规定的顺序分开发送给各相应电路单元处理）。</p>\n<h3 id=\"volatile-性能：\"><a href=\"#volatile-性能：\" class=\"headerlink\" title=\"volatile 性能：\"></a>volatile 性能：</h3><p>volatile 的读性能消耗与普通变量几乎相同，但是写操作稍慢，因为它需要在本地代码中插入许多内存屏障指令来保证处理器不发生乱序执行。</p>\n<h4 id=\"Volatile-与-Synchronized-区别\"><a href=\"#Volatile-与-Synchronized-区别\" class=\"headerlink\" title=\"Volatile 与 Synchronized 区别\"></a>Volatile 与 Synchronized 区别</h4><p>1.从而我们可以看出 volatile 虽然具有可见性但是并不能保证原子性。</p>\n<p>2.性能方面，synchronized 关键字是防止多个线程同时执行一段代码，就会影响程序执行效率，而 volatile 关键字在某些情况下性能要优于 synchronized。<br>但是要注意 volatile 关键字是无法替代 synchronized 关键字的，因为 <strong>volatile 关键字无法保证操作的原子性</strong>。</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["并发编程","多线程线程安全"],"tags":["并发编程"]},{"title":"多线程快速入门","url":"/2021/01/16/1-1%20%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/","content":"<h1 id=\"多线程基础\"><a href=\"#多线程基础\" class=\"headerlink\" title=\"多线程基础\"></a>多线程基础</h1><h2 id=\"线程与进程区别\"><a href=\"#线程与进程区别\" class=\"headerlink\" title=\"线程与进程区别\"></a>线程与进程区别</h2><p>每个正在系统上运行的程序都是一个进程。每个进程包含一到多个线程。线程是一组指令的集合，或者是程序的特殊段，它可以在程序里独立执行。也可以把它理解为代码运行的上下文。所以线程基本上是轻量级的进程，它负责在单个程序里执行多任务。通常由操作系统负责多个线程的调度和执行。使用线程可以把占据时间长的程序中的任务放到后台去处理，程序的运行速度可能加快，在一些等待的任务实现上如用户输入、文件读写和网络收发数据等，线程就比较有用了。在这种情况下可以释放一些珍贵的资源如内存占用等等。如果有大量的线程,会影响性能，因为操作系统需要在它们之间切换，更多的线程需要更多的内存空间，线程的中止需要考虑其对程序运行的影响。通常块模型数据是在多个线程间共享的，需要防止线程死锁情况的发生。</p>\n<p><strong>总结:进程是所有线程的集合，每一个线程是进程中的一条执行路径</strong></p>\n<h2 id=\"多线程创建方式\"><a href=\"#多线程创建方式\" class=\"headerlink\" title=\"多线程创建方式\"></a>多线程创建方式</h2><ol>\n<li>第一种继承 Thread 类 重写 run 方法</li>\n<li>第二种实现 Runnable 接口,重写 run 方法</li>\n<li>第三种使用匿名内部类方式</li>\n</ol>\n<h2 id=\"获取线程对象以及名称\"><a href=\"#获取线程对象以及名称\" class=\"headerlink\" title=\"获取线程对象以及名称\"></a>获取线程对象以及名称</h2><h3 id=\"常用方法\"><a href=\"#常用方法\" class=\"headerlink\" title=\"常用方法\"></a>常用方法</h3><ul>\n<li><strong>start() 启动线程</strong></li>\n<li><strong>currentThread() 获取当前线程对象</strong></li>\n<li>getID() 获取当前线程 ID Thread-编号   该编号从 0 开始</li>\n<li>getName() 获取当前线程名称</li>\n<li><strong>sleep(long mill) 休眠线程</strong></li>\n<li>Stop() 停止线程</li>\n</ul>\n<h3 id=\"常构造函数\"><a href=\"#常构造函数\" class=\"headerlink\" title=\"常构造函数\"></a>常构造函数</h3><ul>\n<li>Thread() 分配一个新的 Thread 对象</li>\n<li>Thread(String name) 分配一个新的 Thread 对象，具有指定的 name 正如其名。</li>\n<li><strong>Thread(Runable r) 分配一个新的 Thread 对象</strong></li>\n<li>Thread(Runable r, String name) 分配一个新的 Thread 对象</li>\n</ul>\n<h2 id=\"守护线程\"><a href=\"#守护线程\" class=\"headerlink\" title=\"守护线程\"></a>守护线程</h2><p>Java 中有两种线程，一种是用户线程，另一种是守护线程。<br><strong>用户线程</strong>是指用户自定义创建的线程，主线程停止，用户线程不会停止。<br><strong>守护线程</strong>当进程不存在或主线程停止，守护线程也会被停止。<br><strong>使用 setDaemon(true)方法设置为守护线程</strong></p>\n<h2 id=\"多线程运行状态\"><a href=\"#多线程运行状态\" class=\"headerlink\" title=\"多线程运行状态\"></a>多线程运行状态</h2><blockquote>\n<p>线程从创建、运行到结束总是处于下面五个状态之一：新建状态、就绪状态、运行状态、阻塞状态及死亡状态。</p>\n</blockquote>\n<h3 id=\"新建状态\"><a href=\"#新建状态\" class=\"headerlink\" title=\"新建状态\"></a>新建状态</h3><p>当用 new 操作符创建一个线程时， 例如 new Thread(r)，线程还没有开始运行，此时线程处在新建状态。 <strong>当一个线程处于新生状态时，程序还没有开始运行线程中的代码</strong>。</p>\n<h3 id=\"就绪状态\"><a href=\"#就绪状态\" class=\"headerlink\" title=\"就绪状态\"></a>就绪状态</h3><p>一个新创建的线程并不自动开始运行，要执行线程，必须调用线程的 start()方法。当线程对象调用 start()方法即启动了线程，start()方法创建线程运行的系统资源，并调度线程运行 run()方法。<strong>当 start()方法返回后，线程就处于就绪状态。处于就绪状态的线程并不一定立即运行 run()方法，线程还必须同其他线程竞争 CPU 时间，只有获得 CPU 时间才可以运行线程</strong>。因为在单 CPU 的计算机系统中，不可能同时运行多个线程，一个时刻仅有一个线程处于运行状态。因此此时可能有多个线程处于就绪状态。对多个处于就绪状态的线程是由 Java 运行时系统的线程调度程序(thread scheduler)来调度的。</p>\n<h3 id=\"运行状态\"><a href=\"#运行状态\" class=\"headerlink\" title=\"运行状态\"></a>运行状态</h3><p>当线程获得 CPU 时间后，它才进入运行状态，真正开始执行 run()方法.</p>\n<h3 id=\"阻塞状态\"><a href=\"#阻塞状态\" class=\"headerlink\" title=\"阻塞状态\"></a>阻塞状态</h3><p>线程运行过程中，可能由于各种原因进入阻塞状态:</p>\n<ul>\n<li>线程通过调用 sleep 方法进入睡眠状态；</li>\n<li>线程调用一个在 I/O 上被阻塞的操作，即该操作在输入输出操作完成之前不会返回到它的调用者；</li>\n<li>线程试图得到一个锁，而该锁正被其他线程持有；</li>\n<li>线程在等待某个触发条件；</li>\n</ul>\n<h3 id=\"死亡状态\"><a href=\"#死亡状态\" class=\"headerlink\" title=\"死亡状态\"></a>死亡状态</h3><p>有两个原因会导致线程死亡：</p>\n<ul>\n<li>run 方法正常退出而自然死亡，</li>\n<li>一个未捕获的异常终止了 run 方法而使线程猝死。</li>\n</ul>\n<p>为了确定线程在当前是否存活着(就是要么是可运行的，要么是被阻塞了)，需要使用 isAlive 方法。如果是可运行或被阻塞，这个方法返回 true； 如果线程仍旧是 new 状态且不是可运行的， 或者线程死亡了，则返回 false.</p>\n<h2 id=\"join-方法作用\"><a href=\"#join-方法作用\" class=\"headerlink\" title=\"join 方法作用\"></a>join 方法作用</h2><p>当在主线程当中执行到 t1.join()方法时，就认为主线程应该把执行权让给 t1</p>\n<h2 id=\"优先级\"><a href=\"#优先级\" class=\"headerlink\" title=\"优先级\"></a>优先级</h2><p>现代操作系统基本采用时分的形式调度运行的线程，线程分配得到的时间片的多少决定了线程使用处理器资源的多少，也对应了线程优先级这个概念。在 JAVA 线程中，通过一个 int priority 来控制优先级，范围为 1-10，其中 10 最高，默认值为 5。</p>\n<h2 id=\"Yield-方法\"><a href=\"#Yield-方法\" class=\"headerlink\" title=\"Yield 方法\"></a>Yield 方法</h2><p>Thread.yield()方法的作用：暂停当前正在执行的线程，并执行其他线程。(可能没有效果)。yield()让当前正在运行的线程回到可运行状态，以允许具有相同优先级的其他线程获得运行的机会。因此，使用 yield()的目的是让具有相同优先级的线程之间能够适当的轮换执行。但是，实际中无法保证 yield()达到让步的目的，因为，让步的线程可能被线程调度程序再次选中。</p>\n<p><strong>结论：大多数情况下，yield()将导致线程从运行状态转到可运行状态，但有可能没有效果。</strong></p>\n<h2 id=\"FQA\"><a href=\"#FQA\" class=\"headerlink\" title=\"FQA\"></a>FQA</h2><h3 id=\"1-进程与线程的区别？\"><a href=\"#1-进程与线程的区别？\" class=\"headerlink\" title=\"1.进程与线程的区别？\"></a>1.进程与线程的区别？</h3><p>答:进程是所有线程的集合，每一个线程是进程中的一条执行路径，线程只是一条执行路径。</p>\n<h3 id=\"2-多线程创建方式？\"><a href=\"#2-多线程创建方式？\" class=\"headerlink\" title=\"2.多线程创建方式？\"></a>2.多线程创建方式？</h3><p>答:继承 Thread 或 Runnable 接口。</p>\n<h3 id=\"3-为什么要使用多线程？多线程应用场景？\"><a href=\"#3-为什么要使用多线程？多线程应用场景？\" class=\"headerlink\" title=\"3.为什么要使用多线程？多线程应用场景？\"></a>3.为什么要使用多线程？多线程应用场景？</h3><p>答:主要能体现到多线程提高程序效率。<br>举例: 迅雷多线程下载、数据库连接池、分批发送短信等。</p>\n<h3 id=\"4-使用继承-Thread-类还是使用实现-Runnable-接口好？\"><a href=\"#4-使用继承-Thread-类还是使用实现-Runnable-接口好？\" class=\"headerlink\" title=\"4.使用继承 Thread 类还是使用实现 Runnable 接口好？\"></a>4.使用继承 Thread 类还是使用实现 Runnable 接口好？</h3><p>使用实现实现 Runnable 接口好，原因实现了接口还可以继续继承，继承了类不能再继承。</p>\n<h3 id=\"5-启动线程是使用调用-start-方法还是-run-方法？\"><a href=\"#5-启动线程是使用调用-start-方法还是-run-方法？\" class=\"headerlink\" title=\"5.启动线程是使用调用 start 方法还是 run 方法？\"></a>5.启动线程是使用调用 start 方法还是 run 方法？</h3><p>开始执行线程 注意 开启线程不是调用 run 方法，而是 start 方法<br>调用 run 知识使用实例调用方法。</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["并发编程","多线程基础"],"tags":["并发编程"]},{"title":"编程语言考试大纲","url":"/2020/07/13/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E8%80%83%E8%AF%95%E5%A4%A7%E7%BA%B2/","content":"\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>"},{"title":"数据结构大纲","url":"/2020/07/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%A7%E7%BA%B2/","content":"<h1 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h1><h2 id=\"入门\"><a href=\"#入门\" class=\"headerlink\" title=\"入门\"></a>入门</h2><h3 id=\"绪论\"><a href=\"#绪论\" class=\"headerlink\" title=\"绪论\"></a>绪论</h3><ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 1.<a href=\"/2020/07/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BB%AA%E8%AE%BA/\" title=\"数据结构绪论\">数据结构绪论</a><h3 id=\"线性表\"><a href=\"#线性表\" class=\"headerlink\" title=\"线性表\"></a>线性表</h3></li>\n<li><input disabled=\"\" type=\"checkbox\"> 1.<a href=\"/2023/12/20/%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E5%AE%9A%E4%B9%89%E5%8F%8A%E5%85%B6%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/\" title=\"线性表的定义及其基本操作\">线性表的定义及其基本操作</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 2.<a href=\"/2023/12/20/%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E9%A1%BA%E5%BA%8F%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84/\" title=\"线性表的顺序存储结构\">线性表的顺序存储结构</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 3.<a href=\"/2023/12/20/%E7%BA%BF%E6%80%A7%E9%93%BE%E8%A1%A8%E5%8F%8A%E5%85%B6%E6%93%8D%E4%BD%9C/\" title=\"线性链表及其操作\">线性链表及其操作</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 4.<a href=\"/2023/12/20/%E5%BE%AA%E7%8E%AF%E9%93%BE%E8%A1%A8%E5%8F%8A%E5%85%B6%E6%93%8D%E4%BD%9C/\" title=\"循环链表及其操作\">循环链表及其操作</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 5.<a href=\"/2023/12/20/%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8%E5%8F%8A%E5%85%B6%E6%93%8D%E4%BD%9C/\" title=\"双向链表及其操作\">双向链表及其操作</a><h3 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h3></li>\n<li><input disabled=\"\" type=\"checkbox\"> 1.<a href=\"数组的概念.md\">数组的概念</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 2.<a href=\"数组的存储结构.md\">数组的存储结构</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 3.<a href=\"矩阵的压缩存储.md\">矩阵的压缩存储</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 4.<a href=\"稀疏矩阵的三元组表表示.md\">稀疏矩阵的三元组表表示</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 5.<a href=\"数组的基本应用.md\">数组的基本应用</a><h3 id=\"堆栈与队列\"><a href=\"#堆栈与队列\" class=\"headerlink\" title=\"堆栈与队列\"></a>堆栈与队列</h3></li>\n<li><input disabled=\"\" type=\"checkbox\"> 1.<a href=\"堆栈的概念及其基本操作.md\">堆栈的概念及其基本操作</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 2.<a href=\"堆栈的顺序存储结构.md\">堆栈的顺序存储结构</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 3.<a href=\"堆栈的链式存储结构.md\">堆栈的链式存储结构</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 4.<a href=\"堆栈的链式存储结构.md\">堆栈的应用举例</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 5.<a href=\"队列的概念及其操作.md\">队列的概念及其操作</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 6.<a href=\"队列的概念及其操作.md\">队列的顺序存储结构</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 7.<a href=\"队列的链式存储结构.md\">队列的链式存储结构</a><h2 id=\"进阶\"><a href=\"#进阶\" class=\"headerlink\" title=\"进阶\"></a>进阶</h2><h3 id=\"树与二叉树\"><a href=\"#树与二叉树\" class=\"headerlink\" title=\"树与二叉树\"></a>树与二叉树</h3></li>\n<li><input disabled=\"\" type=\"checkbox\"> 1.<a href=\"树的基本概念.md\">树的基本概念</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 2.<a href=\"二叉树概念及其基本操作.md\">二叉树概念及其基本操作</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 3.<a href=\"二叉树的存储结构.md\">二叉树的存储结构</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 4.<a href=\"二叉树与树的遍历.md\">二叉树与树的遍历</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 5.<a href=\"线索二叉树.md\">线索二叉树</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 6.<a href=\"线索二叉树.md\">二叉排序树</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 7.<a href=\"哈夫曼树及其应用.md\">哈夫曼树及其应用</a><h3 id=\"图\"><a href=\"#图\" class=\"headerlink\" title=\"图\"></a>图</h3></li>\n<li><input disabled=\"\" type=\"checkbox\"> 1.<a href=\"图的基本概念.md\">图的基本概念</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 2.<a href=\"图的存储方式.md\">图的存储方式</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 3.<a href=\"图的遍历.md\">图的遍历</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 4.<a href=\"最小生成树.md\">最小生成树</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 5.<a href=\"最短路径.md\">最短路径</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 6.<a href=\"AOV网与拓扑排序.md\">AOV网与拓扑排序</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 7.<a href=\"AOE网与关键路径.md\">AOE网与关键路径</a><h2 id=\"高级\"><a href=\"#高级\" class=\"headerlink\" title=\"高级\"></a>高级</h2><h3 id=\"文件与查找\"><a href=\"#文件与查找\" class=\"headerlink\" title=\"文件与查找\"></a>文件与查找</h3></li>\n<li><input disabled=\"\" type=\"checkbox\"> 1.<a href=\"文件概述.md\">文件概述</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 2.<a href=\"顺序文件.md\">顺序文件</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 3.<a href=\"索引文件.md\">索引文件</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 4.<a href=\"B-树与B+树.md\">B-树与B+树</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 5.<a href=\"散列文件.md\">散列文件</a><h3 id=\"内排序\"><a href=\"#内排序\" class=\"headerlink\" title=\"内排序\"></a>内排序</h3></li>\n<li><input disabled=\"\" type=\"checkbox\"> 1.<a href=\"概述.md\">概述</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 2.<a href=\"插入排序.md\">插入排序</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 3.<a href=\"选择排序.md\">选择排序</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 4.<a href=\"泡排序.md\">泡排序</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 5.<a href=\"谢尔排序.md\">谢尔排序</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 6.<a href=\"快速排序.md\">快速排序</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 7.<a href=\"堆积排序.md\">堆积排序</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 8.<a href=\"二路归并排序.md\">二路归并排序</a></li>\n<li><input disabled=\"\" type=\"checkbox\"> 9.<a href=\"各种内排序方法的比较.md\">各种内排序方法的比较</a></li>\n</ul>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["数据结构","考试大纲"],"tags":["数据结构"]},{"title":"数据结构绪论","url":"/2020/07/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BB%AA%E8%AE%BA/","content":"<h1 id=\"一、大纲要求\"><a href=\"#一、大纲要求\" class=\"headerlink\" title=\"一、大纲要求\"></a>一、大纲要求</h1><p>  1．数据的<strong>逻辑结构</strong>与<strong>存储结构</strong>的基本概念<br>  2．算法的定义、基本性质以及算法分析的基本概念，包括采用大Ο形式表示<strong>时间复杂度</strong>和<strong>空间复杂度</strong>。</p>\n<h1 id=\"二、基本概念和术语\"><a href=\"#二、基本概念和术语\" class=\"headerlink\" title=\"二、基本概念和术语\"></a>二、基本概念和术语</h1><h2 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h2><p>  1.<strong>数据</strong>:数据是信息的载体，是描述客观事物属性的数、字符、以及所有能输入到计算机并被计算机程序识别和处理的符号集合。<br>  2.<strong>数据项</strong>:数据项是构成数据元素的基本单位。<br>  3.<strong>数据元素</strong>:数据元素是数据的基本单位，一个数据元素可由若干个数据项组成。例如，学生记录就是一个数据元素，由学号、姓名、年龄等数据项组成。<br>  4.<strong>数据对象</strong>:数据对象是具有相同的性质的数据元素的集合。<br>  5.<strong>数据结构</strong>:数据结构是相互之间存在一种或者多种特定关系的数据元素的集合。数据元素不是孤立存在的，它们之前存在着某种关系，这种数据元素之间的关系成为<strong>结构</strong>。数据结构包括三方面的内容：<strong>逻辑结构</strong>、<strong>存储结构</strong>、<strong>数据的运算</strong>。<br>  6.<strong>逻辑结构</strong>:逻辑结构是指数据之间的逻辑关系，它与数据的存储无关。逻辑结构分为线性结构和非线性结构。线性表是典型的线性结构，集合、树、图是典型的非线性结构。<br>  7.<strong>存储结构</strong>:  存储结构是指数据结构存储在计算机的表示，也叫物理结构。数据结构的存储结构主要有顺序存储、链式存储、索引存储、散列存储。<br>  8.<strong>数据运算</strong>:适加到数据上的运算包括运算的定义和实现。运算的定义是针对指逻辑结构。</p>\n<h2 id=\"算法\"><a href=\"#算法\" class=\"headerlink\" title=\"算法\"></a>算法</h2><p>1.<strong>算法及其性质</strong>:<strong>算法</strong>是对特定问题求解步骤的一种描述，它是指令的有限序列。特性：有穷性、确定性、可行性、输入、输出。<br>2.<strong>基本算法</strong>:枚举法、归纳法、回溯法、模拟法。<br>3.<strong>算法的描述</strong>: 流程图、伪代码、编程语言。</p>\n<h2 id=\"算法分析\"><a href=\"#算法分析\" class=\"headerlink\" title=\"算法分析\"></a>算法分析</h2><p>1.<strong>时间复杂度</strong>:把语句执行的次数的多少作为算法时间复杂程度的度量分析方法称为<strong>频度统计法</strong>。语句频度是指某语句被重复执行的次数。对于最坏的情况，使用大O表示法表达。典型的数量级关系:O(log_2n)&lt;O(n)&lt;O(nlog_2n)&lt;O(n^2)&lt; O(n^3)&lt;O(2^n)&lt;O(n!)。<br>2.<strong>空间复杂度</strong>: 算法的空间复杂度为算法所耗费的存储空间，它是问题规模的函数。算法空间复杂度主要包括局部变量(算法范围内定义的变量)所占用的存储空间和系统为实现递归(如果算法是递归的话)所使用的堆栈空间两部分。算法空间复杂度一般是以数量级形式给出，如O(1)、O(n)、O(n^2)、O(log_2n)。</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"enable\":true,\"clientID\":\"bf5a3e7272912648eb25\",\"clientSecret\":\"800f7f079fbf92149e338f5f8d841cf766637e27\",\"repo\":\"github.io.comment\",\"owner\":\"lostzoo\",\"admin\":\"lostzoo\",\"id\":\"location.pathname\",\"distractionFreeMode\":true};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>","categories":["数据结构","考试大纲","绪论"],"tags":["数据结构"]}]